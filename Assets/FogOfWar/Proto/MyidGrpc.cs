// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: myid.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Greyhole.Myid {
  public static partial class MyID
  {
    static readonly string __ServiceName = "greyhole.myid.MyID";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.SignUpRequest> __Marshaller_greyhole_myid_SignUpRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.SignUpRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.SignUpReply> __Marshaller_greyhole_myid_SignUpReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.SignUpReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.SignInRequest> __Marshaller_greyhole_myid_SignInRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.SignInRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.SignInReply> __Marshaller_greyhole_myid_SignInReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.SignInReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.SignUpV2Request> __Marshaller_greyhole_myid_SignUpV2Request = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.SignUpV2Request.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.SignUpOneClickRequest> __Marshaller_greyhole_myid_SignUpOneClickRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.SignUpOneClickRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.SignUpOneClickReply> __Marshaller_greyhole_myid_SignUpOneClickReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.SignUpOneClickReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.SaveOneClickInfoRequest> __Marshaller_greyhole_myid_SaveOneClickInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.SaveOneClickInfoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.SignUpPhoneRequest> __Marshaller_greyhole_myid_SignUpPhoneRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.SignUpPhoneRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.SignUpPhoneReply> __Marshaller_greyhole_myid_SignUpPhoneReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.SignUpPhoneReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.SignUpEmailRequest> __Marshaller_greyhole_myid_SignUpEmailRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.SignUpEmailRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.SignUpEmailReply> __Marshaller_greyhole_myid_SignUpEmailReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.SignUpEmailReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.SignUpCryptoWalletRequest> __Marshaller_greyhole_myid_SignUpCryptoWalletRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.SignUpCryptoWalletRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.SignUpCryptoWalletReply> __Marshaller_greyhole_myid_SignUpCryptoWalletReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.SignUpCryptoWalletReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.SignInV2Request> __Marshaller_greyhole_myid_SignInV2Request = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.SignInV2Request.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.SignInPhoneRequest> __Marshaller_greyhole_myid_SignInPhoneRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.SignInPhoneRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.SignInEmailRequest> __Marshaller_greyhole_myid_SignInEmailRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.SignInEmailRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.SignInCryptoWalletRequest> __Marshaller_greyhole_myid_SignInCryptoWalletRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.SignInCryptoWalletRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.SignInCryptoWalletReply> __Marshaller_greyhole_myid_SignInCryptoWalletReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.SignInCryptoWalletReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.AddCredentialRequest> __Marshaller_greyhole_myid_AddCredentialRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.AddCredentialRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.ResendSignUpOTPRequest> __Marshaller_greyhole_myid_ResendSignUpOTPRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.ResendSignUpOTPRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.ResendSignUpOTPReply> __Marshaller_greyhole_myid_ResendSignUpOTPReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.ResendSignUpOTPReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.ConfirmSignUpRequest> __Marshaller_greyhole_myid_ConfirmSignUpRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.ConfirmSignUpRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.ConfirmSignUpReply> __Marshaller_greyhole_myid_ConfirmSignUpReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.ConfirmSignUpReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.ResendSignInOTPRequest> __Marshaller_greyhole_myid_ResendSignInOTPRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.ResendSignInOTPRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.ResendSignInOTPReply> __Marshaller_greyhole_myid_ResendSignInOTPReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.ResendSignInOTPReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.ConfirmSignInRequest> __Marshaller_greyhole_myid_ConfirmSignInRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.ConfirmSignInRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.ConfirmSignInReply> __Marshaller_greyhole_myid_ConfirmSignInReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.ConfirmSignInReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.ConfirmCryptoWalletRequest> __Marshaller_greyhole_myid_ConfirmCryptoWalletRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.ConfirmCryptoWalletRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.ConfirmCryptoWalletReply> __Marshaller_greyhole_myid_ConfirmCryptoWalletReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.ConfirmCryptoWalletReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.SignInTelegramRequest> __Marshaller_greyhole_myid_SignInTelegramRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.SignInTelegramRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.SignInTelegramReply> __Marshaller_greyhole_myid_SignInTelegramReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.SignInTelegramReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.SignInTelegramViaTokenRequest> __Marshaller_greyhole_myid_SignInTelegramViaTokenRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.SignInTelegramViaTokenRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.SignInTelegramViaTokenReply> __Marshaller_greyhole_myid_SignInTelegramViaTokenReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.SignInTelegramViaTokenReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.CreatePasswordRequest> __Marshaller_greyhole_myid_CreatePasswordRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.CreatePasswordRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.CreateAccessTokenRequest> __Marshaller_greyhole_myid_CreateAccessTokenRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.CreateAccessTokenRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.CreateAccessTokenReply> __Marshaller_greyhole_myid_CreateAccessTokenReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.CreateAccessTokenReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.MeReply> __Marshaller_greyhole_myid_MeReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.MeReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.ChangePasswordRequest> __Marshaller_greyhole_myid_ChangePasswordRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.ChangePasswordRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.UpdateMetadataRequest> __Marshaller_greyhole_myid_UpdateMetadataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.UpdateMetadataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.AddInviterRequest> __Marshaller_greyhole_myid_AddInviterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.AddInviterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.UpdateEmailRequest> __Marshaller_greyhole_myid_UpdateEmailRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.UpdateEmailRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.UpdateEmailReply> __Marshaller_greyhole_myid_UpdateEmailReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.UpdateEmailReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.VerifyEmailRequest> __Marshaller_greyhole_myid_VerifyEmailRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.VerifyEmailRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.VerifyEmailReply> __Marshaller_greyhole_myid_VerifyEmailReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.VerifyEmailReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.UpdatePhoneNumberRequest> __Marshaller_greyhole_myid_UpdatePhoneNumberRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.UpdatePhoneNumberRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.UpdatePhoneNumberReply> __Marshaller_greyhole_myid_UpdatePhoneNumberReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.UpdatePhoneNumberReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.UpdatePhoneNumberV2Request> __Marshaller_greyhole_myid_UpdatePhoneNumberV2Request = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.UpdatePhoneNumberV2Request.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.VerifyPhoneNumberRequest> __Marshaller_greyhole_myid_VerifyPhoneNumberRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.VerifyPhoneNumberRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.VerifyPhoneNumberReply> __Marshaller_greyhole_myid_VerifyPhoneNumberReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.VerifyPhoneNumberReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.ResetPasswordRequest> __Marshaller_greyhole_myid_ResetPasswordRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.ResetPasswordRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.ResetPasswordReply> __Marshaller_greyhole_myid_ResetPasswordReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.ResetPasswordReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.ResetPasswordV2Request> __Marshaller_greyhole_myid_ResetPasswordV2Request = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.ResetPasswordV2Request.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.VerifyResetPasswordRequest> __Marshaller_greyhole_myid_VerifyResetPasswordRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.VerifyResetPasswordRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.SubmitResetPasswordRequest> __Marshaller_greyhole_myid_SubmitResetPasswordRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.SubmitResetPasswordRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.CheckCredentialRequest> __Marshaller_greyhole_myid_CheckCredentialRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.CheckCredentialRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.SignUpRequest, global::Greyhole.Myid.SignUpReply> __Method_SignUp = new grpc::Method<global::Greyhole.Myid.SignUpRequest, global::Greyhole.Myid.SignUpReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SignUp",
        __Marshaller_greyhole_myid_SignUpRequest,
        __Marshaller_greyhole_myid_SignUpReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.SignInRequest, global::Greyhole.Myid.SignInReply> __Method_SignIn = new grpc::Method<global::Greyhole.Myid.SignInRequest, global::Greyhole.Myid.SignInReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SignIn",
        __Marshaller_greyhole_myid_SignInRequest,
        __Marshaller_greyhole_myid_SignInReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.SignUpV2Request, global::Greyhole.Myid.SignUpReply> __Method_SignUpV2 = new grpc::Method<global::Greyhole.Myid.SignUpV2Request, global::Greyhole.Myid.SignUpReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SignUpV2",
        __Marshaller_greyhole_myid_SignUpV2Request,
        __Marshaller_greyhole_myid_SignUpReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.SignUpOneClickRequest, global::Greyhole.Myid.SignUpOneClickReply> __Method_SignUpOneClick = new grpc::Method<global::Greyhole.Myid.SignUpOneClickRequest, global::Greyhole.Myid.SignUpOneClickReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SignUpOneClick",
        __Marshaller_greyhole_myid_SignUpOneClickRequest,
        __Marshaller_greyhole_myid_SignUpOneClickReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.SaveOneClickInfoRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SaveOneClickInfo = new grpc::Method<global::Greyhole.Myid.SaveOneClickInfoRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SaveOneClickInfo",
        __Marshaller_greyhole_myid_SaveOneClickInfoRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.SignUpPhoneRequest, global::Greyhole.Myid.SignUpPhoneReply> __Method_SignUpPhone = new grpc::Method<global::Greyhole.Myid.SignUpPhoneRequest, global::Greyhole.Myid.SignUpPhoneReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SignUpPhone",
        __Marshaller_greyhole_myid_SignUpPhoneRequest,
        __Marshaller_greyhole_myid_SignUpPhoneReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.SignUpEmailRequest, global::Greyhole.Myid.SignUpEmailReply> __Method_SignUpEmail = new grpc::Method<global::Greyhole.Myid.SignUpEmailRequest, global::Greyhole.Myid.SignUpEmailReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SignUpEmail",
        __Marshaller_greyhole_myid_SignUpEmailRequest,
        __Marshaller_greyhole_myid_SignUpEmailReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.SignUpCryptoWalletRequest, global::Greyhole.Myid.SignUpCryptoWalletReply> __Method_SignUpCryptoWallet = new grpc::Method<global::Greyhole.Myid.SignUpCryptoWalletRequest, global::Greyhole.Myid.SignUpCryptoWalletReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SignUpCryptoWallet",
        __Marshaller_greyhole_myid_SignUpCryptoWalletRequest,
        __Marshaller_greyhole_myid_SignUpCryptoWalletReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.SignInV2Request, global::Greyhole.Myid.SignInReply> __Method_SignInV2 = new grpc::Method<global::Greyhole.Myid.SignInV2Request, global::Greyhole.Myid.SignInReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SignInV2",
        __Marshaller_greyhole_myid_SignInV2Request,
        __Marshaller_greyhole_myid_SignInReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.SignInPhoneRequest, global::Greyhole.Myid.SignInReply> __Method_SignInPhone = new grpc::Method<global::Greyhole.Myid.SignInPhoneRequest, global::Greyhole.Myid.SignInReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SignInPhone",
        __Marshaller_greyhole_myid_SignInPhoneRequest,
        __Marshaller_greyhole_myid_SignInReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.SignInEmailRequest, global::Greyhole.Myid.SignInReply> __Method_SignInEmail = new grpc::Method<global::Greyhole.Myid.SignInEmailRequest, global::Greyhole.Myid.SignInReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SignInEmail",
        __Marshaller_greyhole_myid_SignInEmailRequest,
        __Marshaller_greyhole_myid_SignInReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.SignInCryptoWalletRequest, global::Greyhole.Myid.SignInCryptoWalletReply> __Method_SignInCryptoWallet = new grpc::Method<global::Greyhole.Myid.SignInCryptoWalletRequest, global::Greyhole.Myid.SignInCryptoWalletReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SignInCryptoWallet",
        __Marshaller_greyhole_myid_SignInCryptoWalletRequest,
        __Marshaller_greyhole_myid_SignInCryptoWalletReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.AddCredentialRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AddCredential = new grpc::Method<global::Greyhole.Myid.AddCredentialRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddCredential",
        __Marshaller_greyhole_myid_AddCredentialRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.ResendSignUpOTPRequest, global::Greyhole.Myid.ResendSignUpOTPReply> __Method_ResendSignUpPhoneOTP = new grpc::Method<global::Greyhole.Myid.ResendSignUpOTPRequest, global::Greyhole.Myid.ResendSignUpOTPReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResendSignUpPhoneOTP",
        __Marshaller_greyhole_myid_ResendSignUpOTPRequest,
        __Marshaller_greyhole_myid_ResendSignUpOTPReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.ConfirmSignUpRequest, global::Greyhole.Myid.ConfirmSignUpReply> __Method_ConfirmSignUpPhone = new grpc::Method<global::Greyhole.Myid.ConfirmSignUpRequest, global::Greyhole.Myid.ConfirmSignUpReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfirmSignUpPhone",
        __Marshaller_greyhole_myid_ConfirmSignUpRequest,
        __Marshaller_greyhole_myid_ConfirmSignUpReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.ResendSignUpOTPRequest, global::Greyhole.Myid.ResendSignUpOTPReply> __Method_ResendSignUpEmailOTP = new grpc::Method<global::Greyhole.Myid.ResendSignUpOTPRequest, global::Greyhole.Myid.ResendSignUpOTPReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResendSignUpEmailOTP",
        __Marshaller_greyhole_myid_ResendSignUpOTPRequest,
        __Marshaller_greyhole_myid_ResendSignUpOTPReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.ConfirmSignUpRequest, global::Greyhole.Myid.ConfirmSignUpReply> __Method_ConfirmSignUpEmail = new grpc::Method<global::Greyhole.Myid.ConfirmSignUpRequest, global::Greyhole.Myid.ConfirmSignUpReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfirmSignUpEmail",
        __Marshaller_greyhole_myid_ConfirmSignUpRequest,
        __Marshaller_greyhole_myid_ConfirmSignUpReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.ResendSignInOTPRequest, global::Greyhole.Myid.ResendSignInOTPReply> __Method_ResendSignInOTP = new grpc::Method<global::Greyhole.Myid.ResendSignInOTPRequest, global::Greyhole.Myid.ResendSignInOTPReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResendSignInOTP",
        __Marshaller_greyhole_myid_ResendSignInOTPRequest,
        __Marshaller_greyhole_myid_ResendSignInOTPReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.ConfirmSignInRequest, global::Greyhole.Myid.ConfirmSignInReply> __Method_ConfirmSignIn = new grpc::Method<global::Greyhole.Myid.ConfirmSignInRequest, global::Greyhole.Myid.ConfirmSignInReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfirmSignIn",
        __Marshaller_greyhole_myid_ConfirmSignInRequest,
        __Marshaller_greyhole_myid_ConfirmSignInReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.ResendSignInOTPRequest, global::Greyhole.Myid.ResendSignInOTPReply> __Method_ResendSignInPhoneOTP = new grpc::Method<global::Greyhole.Myid.ResendSignInOTPRequest, global::Greyhole.Myid.ResendSignInOTPReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResendSignInPhoneOTP",
        __Marshaller_greyhole_myid_ResendSignInOTPRequest,
        __Marshaller_greyhole_myid_ResendSignInOTPReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.ConfirmSignInRequest, global::Greyhole.Myid.ConfirmSignInReply> __Method_ConfirmSignInPhone = new grpc::Method<global::Greyhole.Myid.ConfirmSignInRequest, global::Greyhole.Myid.ConfirmSignInReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfirmSignInPhone",
        __Marshaller_greyhole_myid_ConfirmSignInRequest,
        __Marshaller_greyhole_myid_ConfirmSignInReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.ResendSignInOTPRequest, global::Greyhole.Myid.ResendSignInOTPReply> __Method_ResendSignInEmailOTP = new grpc::Method<global::Greyhole.Myid.ResendSignInOTPRequest, global::Greyhole.Myid.ResendSignInOTPReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResendSignInEmailOTP",
        __Marshaller_greyhole_myid_ResendSignInOTPRequest,
        __Marshaller_greyhole_myid_ResendSignInOTPReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.ConfirmSignInRequest, global::Greyhole.Myid.ConfirmSignInReply> __Method_ConfirmSignInEmail = new grpc::Method<global::Greyhole.Myid.ConfirmSignInRequest, global::Greyhole.Myid.ConfirmSignInReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfirmSignInEmail",
        __Marshaller_greyhole_myid_ConfirmSignInRequest,
        __Marshaller_greyhole_myid_ConfirmSignInReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.ConfirmCryptoWalletRequest, global::Greyhole.Myid.ConfirmCryptoWalletReply> __Method_ConfirmCryptoWallet = new grpc::Method<global::Greyhole.Myid.ConfirmCryptoWalletRequest, global::Greyhole.Myid.ConfirmCryptoWalletReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfirmCryptoWallet",
        __Marshaller_greyhole_myid_ConfirmCryptoWalletRequest,
        __Marshaller_greyhole_myid_ConfirmCryptoWalletReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SignOut = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SignOut",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.SignInTelegramRequest, global::Greyhole.Myid.SignInTelegramReply> __Method_SignInTelegram = new grpc::Method<global::Greyhole.Myid.SignInTelegramRequest, global::Greyhole.Myid.SignInTelegramReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SignInTelegram",
        __Marshaller_greyhole_myid_SignInTelegramRequest,
        __Marshaller_greyhole_myid_SignInTelegramReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.SignInTelegramViaTokenRequest, global::Greyhole.Myid.SignInTelegramViaTokenReply> __Method_SignInTelegramViaToken = new grpc::Method<global::Greyhole.Myid.SignInTelegramViaTokenRequest, global::Greyhole.Myid.SignInTelegramViaTokenReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SignInTelegramViaToken",
        __Marshaller_greyhole_myid_SignInTelegramViaTokenRequest,
        __Marshaller_greyhole_myid_SignInTelegramViaTokenReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.CreatePasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_CreatePassword = new grpc::Method<global::Greyhole.Myid.CreatePasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreatePassword",
        __Marshaller_greyhole_myid_CreatePasswordRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.CreateAccessTokenRequest, global::Greyhole.Myid.CreateAccessTokenReply> __Method_CreateAccessToken = new grpc::Method<global::Greyhole.Myid.CreateAccessTokenRequest, global::Greyhole.Myid.CreateAccessTokenReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAccessToken",
        __Marshaller_greyhole_myid_CreateAccessTokenRequest,
        __Marshaller_greyhole_myid_CreateAccessTokenReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Greyhole.Myid.MeReply> __Method_Me = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Greyhole.Myid.MeReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Me",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_greyhole_myid_MeReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.ChangePasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangePassword = new grpc::Method<global::Greyhole.Myid.ChangePasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ChangePassword",
        __Marshaller_greyhole_myid_ChangePasswordRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.UpdateMetadataRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UpdateMetadata = new grpc::Method<global::Greyhole.Myid.UpdateMetadataRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateMetadata",
        __Marshaller_greyhole_myid_UpdateMetadataRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.AddInviterRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AddInviter = new grpc::Method<global::Greyhole.Myid.AddInviterRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddInviter",
        __Marshaller_greyhole_myid_AddInviterRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.UpdateEmailRequest, global::Greyhole.Myid.UpdateEmailReply> __Method_UpdateEmail = new grpc::Method<global::Greyhole.Myid.UpdateEmailRequest, global::Greyhole.Myid.UpdateEmailReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateEmail",
        __Marshaller_greyhole_myid_UpdateEmailRequest,
        __Marshaller_greyhole_myid_UpdateEmailReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.VerifyEmailRequest, global::Greyhole.Myid.VerifyEmailReply> __Method_VerifyEmail = new grpc::Method<global::Greyhole.Myid.VerifyEmailRequest, global::Greyhole.Myid.VerifyEmailReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "VerifyEmail",
        __Marshaller_greyhole_myid_VerifyEmailRequest,
        __Marshaller_greyhole_myid_VerifyEmailReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.UpdatePhoneNumberRequest, global::Greyhole.Myid.UpdatePhoneNumberReply> __Method_UpdatePhoneNumber = new grpc::Method<global::Greyhole.Myid.UpdatePhoneNumberRequest, global::Greyhole.Myid.UpdatePhoneNumberReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdatePhoneNumber",
        __Marshaller_greyhole_myid_UpdatePhoneNumberRequest,
        __Marshaller_greyhole_myid_UpdatePhoneNumberReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.UpdatePhoneNumberV2Request, global::Greyhole.Myid.UpdatePhoneNumberReply> __Method_UpdatePhoneNumberV2 = new grpc::Method<global::Greyhole.Myid.UpdatePhoneNumberV2Request, global::Greyhole.Myid.UpdatePhoneNumberReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdatePhoneNumberV2",
        __Marshaller_greyhole_myid_UpdatePhoneNumberV2Request,
        __Marshaller_greyhole_myid_UpdatePhoneNumberReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.VerifyPhoneNumberRequest, global::Greyhole.Myid.VerifyPhoneNumberReply> __Method_VerifyPhoneNumber = new grpc::Method<global::Greyhole.Myid.VerifyPhoneNumberRequest, global::Greyhole.Myid.VerifyPhoneNumberReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "VerifyPhoneNumber",
        __Marshaller_greyhole_myid_VerifyPhoneNumberRequest,
        __Marshaller_greyhole_myid_VerifyPhoneNumberReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.ResetPasswordRequest, global::Greyhole.Myid.ResetPasswordReply> __Method_ResetPassword = new grpc::Method<global::Greyhole.Myid.ResetPasswordRequest, global::Greyhole.Myid.ResetPasswordReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetPassword",
        __Marshaller_greyhole_myid_ResetPasswordRequest,
        __Marshaller_greyhole_myid_ResetPasswordReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.ResetPasswordV2Request, global::Greyhole.Myid.ResetPasswordReply> __Method_ResetPasswordV2 = new grpc::Method<global::Greyhole.Myid.ResetPasswordV2Request, global::Greyhole.Myid.ResetPasswordReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetPasswordV2",
        __Marshaller_greyhole_myid_ResetPasswordV2Request,
        __Marshaller_greyhole_myid_ResetPasswordReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.VerifyResetPasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_VerifyResetPassword = new grpc::Method<global::Greyhole.Myid.VerifyResetPasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "VerifyResetPassword",
        __Marshaller_greyhole_myid_VerifyResetPasswordRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.SubmitResetPasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SubmitResetPassword = new grpc::Method<global::Greyhole.Myid.SubmitResetPasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SubmitResetPassword",
        __Marshaller_greyhole_myid_SubmitResetPasswordRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.ChangePasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangePhonePassword = new grpc::Method<global::Greyhole.Myid.ChangePasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ChangePhonePassword",
        __Marshaller_greyhole_myid_ChangePasswordRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.ResetPasswordV2Request, global::Greyhole.Myid.ResetPasswordReply> __Method_ResetPhonePassword = new grpc::Method<global::Greyhole.Myid.ResetPasswordV2Request, global::Greyhole.Myid.ResetPasswordReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetPhonePassword",
        __Marshaller_greyhole_myid_ResetPasswordV2Request,
        __Marshaller_greyhole_myid_ResetPasswordReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.VerifyResetPasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_VerifyResetPhonePassword = new grpc::Method<global::Greyhole.Myid.VerifyResetPasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "VerifyResetPhonePassword",
        __Marshaller_greyhole_myid_VerifyResetPasswordRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.SubmitResetPasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SubmitResetPhonePassword = new grpc::Method<global::Greyhole.Myid.SubmitResetPasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SubmitResetPhonePassword",
        __Marshaller_greyhole_myid_SubmitResetPasswordRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.ChangePasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangeEmailPassword = new grpc::Method<global::Greyhole.Myid.ChangePasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ChangeEmailPassword",
        __Marshaller_greyhole_myid_ChangePasswordRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.ResetPasswordV2Request, global::Greyhole.Myid.ResetPasswordReply> __Method_ResetEmailPassword = new grpc::Method<global::Greyhole.Myid.ResetPasswordV2Request, global::Greyhole.Myid.ResetPasswordReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetEmailPassword",
        __Marshaller_greyhole_myid_ResetPasswordV2Request,
        __Marshaller_greyhole_myid_ResetPasswordReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.VerifyResetPasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_VerifyResetEmailPassword = new grpc::Method<global::Greyhole.Myid.VerifyResetPasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "VerifyResetEmailPassword",
        __Marshaller_greyhole_myid_VerifyResetPasswordRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.SubmitResetPasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SubmitResetEmailPassword = new grpc::Method<global::Greyhole.Myid.SubmitResetPasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SubmitResetEmailPassword",
        __Marshaller_greyhole_myid_SubmitResetPasswordRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.CheckCredentialRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_CheckCredential = new grpc::Method<global::Greyhole.Myid.CheckCredentialRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CheckCredential",
        __Marshaller_greyhole_myid_CheckCredentialRequest,
        __Marshaller_google_protobuf_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Greyhole.Myid.MyidReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of MyID</summary>
    [grpc::BindServiceMethod(typeof(MyID), "BindService")]
    public abstract partial class MyIDBase
    {
      /// <summary>
      /// deprecated
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.SignUpReply> SignUp(global::Greyhole.Myid.SignUpRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// deprecated
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.SignInReply> SignIn(global::Greyhole.Myid.SignInRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.SignUpReply> SignUpV2(global::Greyhole.Myid.SignUpV2Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.SignUpOneClickReply> SignUpOneClick(global::Greyhole.Myid.SignUpOneClickRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> SaveOneClickInfo(global::Greyhole.Myid.SaveOneClickInfoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.SignUpPhoneReply> SignUpPhone(global::Greyhole.Myid.SignUpPhoneRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.SignUpEmailReply> SignUpEmail(global::Greyhole.Myid.SignUpEmailRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.SignUpCryptoWalletReply> SignUpCryptoWallet(global::Greyhole.Myid.SignUpCryptoWalletRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.SignInReply> SignInV2(global::Greyhole.Myid.SignInV2Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.SignInReply> SignInPhone(global::Greyhole.Myid.SignInPhoneRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.SignInReply> SignInEmail(global::Greyhole.Myid.SignInEmailRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.SignInCryptoWalletReply> SignInCryptoWallet(global::Greyhole.Myid.SignInCryptoWalletRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> AddCredential(global::Greyhole.Myid.AddCredentialRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.ResendSignUpOTPReply> ResendSignUpPhoneOTP(global::Greyhole.Myid.ResendSignUpOTPRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.ConfirmSignUpReply> ConfirmSignUpPhone(global::Greyhole.Myid.ConfirmSignUpRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.ResendSignUpOTPReply> ResendSignUpEmailOTP(global::Greyhole.Myid.ResendSignUpOTPRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.ConfirmSignUpReply> ConfirmSignUpEmail(global::Greyhole.Myid.ConfirmSignUpRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.ResendSignInOTPReply> ResendSignInOTP(global::Greyhole.Myid.ResendSignInOTPRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.ConfirmSignInReply> ConfirmSignIn(global::Greyhole.Myid.ConfirmSignInRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.ResendSignInOTPReply> ResendSignInPhoneOTP(global::Greyhole.Myid.ResendSignInOTPRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.ConfirmSignInReply> ConfirmSignInPhone(global::Greyhole.Myid.ConfirmSignInRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.ResendSignInOTPReply> ResendSignInEmailOTP(global::Greyhole.Myid.ResendSignInOTPRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.ConfirmSignInReply> ConfirmSignInEmail(global::Greyhole.Myid.ConfirmSignInRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.ConfirmCryptoWalletReply> ConfirmCryptoWallet(global::Greyhole.Myid.ConfirmCryptoWalletRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> SignOut(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.SignInTelegramReply> SignInTelegram(global::Greyhole.Myid.SignInTelegramRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.SignInTelegramViaTokenReply> SignInTelegramViaToken(global::Greyhole.Myid.SignInTelegramViaTokenRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> CreatePassword(global::Greyhole.Myid.CreatePasswordRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.CreateAccessTokenReply> CreateAccessToken(global::Greyhole.Myid.CreateAccessTokenRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.MeReply> Me(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> ChangePassword(global::Greyhole.Myid.ChangePasswordRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> UpdateMetadata(global::Greyhole.Myid.UpdateMetadataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> AddInviter(global::Greyhole.Myid.AddInviterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.UpdateEmailReply> UpdateEmail(global::Greyhole.Myid.UpdateEmailRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.VerifyEmailReply> VerifyEmail(global::Greyhole.Myid.VerifyEmailRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// deprecated
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.UpdatePhoneNumberReply> UpdatePhoneNumber(global::Greyhole.Myid.UpdatePhoneNumberRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.UpdatePhoneNumberReply> UpdatePhoneNumberV2(global::Greyhole.Myid.UpdatePhoneNumberV2Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.VerifyPhoneNumberReply> VerifyPhoneNumber(global::Greyhole.Myid.VerifyPhoneNumberRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// deprecated
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.ResetPasswordReply> ResetPassword(global::Greyhole.Myid.ResetPasswordRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.ResetPasswordReply> ResetPasswordV2(global::Greyhole.Myid.ResetPasswordV2Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> VerifyResetPassword(global::Greyhole.Myid.VerifyResetPasswordRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> SubmitResetPassword(global::Greyhole.Myid.SubmitResetPasswordRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> ChangePhonePassword(global::Greyhole.Myid.ChangePasswordRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.ResetPasswordReply> ResetPhonePassword(global::Greyhole.Myid.ResetPasswordV2Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> VerifyResetPhonePassword(global::Greyhole.Myid.VerifyResetPasswordRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> SubmitResetPhonePassword(global::Greyhole.Myid.SubmitResetPasswordRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> ChangeEmailPassword(global::Greyhole.Myid.ChangePasswordRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.ResetPasswordReply> ResetEmailPassword(global::Greyhole.Myid.ResetPasswordV2Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> VerifyResetEmailPassword(global::Greyhole.Myid.VerifyResetPasswordRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> SubmitResetEmailPassword(global::Greyhole.Myid.SubmitResetPasswordRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> CheckCredential(global::Greyhole.Myid.CheckCredentialRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for MyID</summary>
    public partial class MyIDClient : grpc::ClientBase<MyIDClient>
    {
      /// <summary>Creates a new client for MyID</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public MyIDClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for MyID that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public MyIDClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected MyIDClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected MyIDClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// deprecated
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.SignUpReply SignUp(global::Greyhole.Myid.SignUpRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SignUp(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// deprecated
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.SignUpReply SignUp(global::Greyhole.Myid.SignUpRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SignUp, null, options, request);
      }
      /// <summary>
      /// deprecated
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.SignUpReply> SignUpAsync(global::Greyhole.Myid.SignUpRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SignUpAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// deprecated
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.SignUpReply> SignUpAsync(global::Greyhole.Myid.SignUpRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SignUp, null, options, request);
      }
      /// <summary>
      /// deprecated
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.SignInReply SignIn(global::Greyhole.Myid.SignInRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SignIn(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// deprecated
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.SignInReply SignIn(global::Greyhole.Myid.SignInRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SignIn, null, options, request);
      }
      /// <summary>
      /// deprecated
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.SignInReply> SignInAsync(global::Greyhole.Myid.SignInRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SignInAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// deprecated
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.SignInReply> SignInAsync(global::Greyhole.Myid.SignInRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SignIn, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.SignUpReply SignUpV2(global::Greyhole.Myid.SignUpV2Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SignUpV2(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.SignUpReply SignUpV2(global::Greyhole.Myid.SignUpV2Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SignUpV2, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.SignUpReply> SignUpV2Async(global::Greyhole.Myid.SignUpV2Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SignUpV2Async(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.SignUpReply> SignUpV2Async(global::Greyhole.Myid.SignUpV2Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SignUpV2, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.SignUpOneClickReply SignUpOneClick(global::Greyhole.Myid.SignUpOneClickRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SignUpOneClick(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.SignUpOneClickReply SignUpOneClick(global::Greyhole.Myid.SignUpOneClickRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SignUpOneClick, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.SignUpOneClickReply> SignUpOneClickAsync(global::Greyhole.Myid.SignUpOneClickRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SignUpOneClickAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.SignUpOneClickReply> SignUpOneClickAsync(global::Greyhole.Myid.SignUpOneClickRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SignUpOneClick, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SaveOneClickInfo(global::Greyhole.Myid.SaveOneClickInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SaveOneClickInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SaveOneClickInfo(global::Greyhole.Myid.SaveOneClickInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SaveOneClickInfo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SaveOneClickInfoAsync(global::Greyhole.Myid.SaveOneClickInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SaveOneClickInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SaveOneClickInfoAsync(global::Greyhole.Myid.SaveOneClickInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SaveOneClickInfo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.SignUpPhoneReply SignUpPhone(global::Greyhole.Myid.SignUpPhoneRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SignUpPhone(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.SignUpPhoneReply SignUpPhone(global::Greyhole.Myid.SignUpPhoneRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SignUpPhone, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.SignUpPhoneReply> SignUpPhoneAsync(global::Greyhole.Myid.SignUpPhoneRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SignUpPhoneAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.SignUpPhoneReply> SignUpPhoneAsync(global::Greyhole.Myid.SignUpPhoneRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SignUpPhone, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.SignUpEmailReply SignUpEmail(global::Greyhole.Myid.SignUpEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SignUpEmail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.SignUpEmailReply SignUpEmail(global::Greyhole.Myid.SignUpEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SignUpEmail, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.SignUpEmailReply> SignUpEmailAsync(global::Greyhole.Myid.SignUpEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SignUpEmailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.SignUpEmailReply> SignUpEmailAsync(global::Greyhole.Myid.SignUpEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SignUpEmail, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.SignUpCryptoWalletReply SignUpCryptoWallet(global::Greyhole.Myid.SignUpCryptoWalletRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SignUpCryptoWallet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.SignUpCryptoWalletReply SignUpCryptoWallet(global::Greyhole.Myid.SignUpCryptoWalletRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SignUpCryptoWallet, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.SignUpCryptoWalletReply> SignUpCryptoWalletAsync(global::Greyhole.Myid.SignUpCryptoWalletRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SignUpCryptoWalletAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.SignUpCryptoWalletReply> SignUpCryptoWalletAsync(global::Greyhole.Myid.SignUpCryptoWalletRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SignUpCryptoWallet, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.SignInReply SignInV2(global::Greyhole.Myid.SignInV2Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SignInV2(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.SignInReply SignInV2(global::Greyhole.Myid.SignInV2Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SignInV2, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.SignInReply> SignInV2Async(global::Greyhole.Myid.SignInV2Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SignInV2Async(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.SignInReply> SignInV2Async(global::Greyhole.Myid.SignInV2Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SignInV2, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.SignInReply SignInPhone(global::Greyhole.Myid.SignInPhoneRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SignInPhone(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.SignInReply SignInPhone(global::Greyhole.Myid.SignInPhoneRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SignInPhone, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.SignInReply> SignInPhoneAsync(global::Greyhole.Myid.SignInPhoneRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SignInPhoneAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.SignInReply> SignInPhoneAsync(global::Greyhole.Myid.SignInPhoneRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SignInPhone, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.SignInReply SignInEmail(global::Greyhole.Myid.SignInEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SignInEmail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.SignInReply SignInEmail(global::Greyhole.Myid.SignInEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SignInEmail, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.SignInReply> SignInEmailAsync(global::Greyhole.Myid.SignInEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SignInEmailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.SignInReply> SignInEmailAsync(global::Greyhole.Myid.SignInEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SignInEmail, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.SignInCryptoWalletReply SignInCryptoWallet(global::Greyhole.Myid.SignInCryptoWalletRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SignInCryptoWallet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.SignInCryptoWalletReply SignInCryptoWallet(global::Greyhole.Myid.SignInCryptoWalletRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SignInCryptoWallet, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.SignInCryptoWalletReply> SignInCryptoWalletAsync(global::Greyhole.Myid.SignInCryptoWalletRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SignInCryptoWalletAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.SignInCryptoWalletReply> SignInCryptoWalletAsync(global::Greyhole.Myid.SignInCryptoWalletRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SignInCryptoWallet, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty AddCredential(global::Greyhole.Myid.AddCredentialRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddCredential(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty AddCredential(global::Greyhole.Myid.AddCredentialRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddCredential, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> AddCredentialAsync(global::Greyhole.Myid.AddCredentialRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddCredentialAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> AddCredentialAsync(global::Greyhole.Myid.AddCredentialRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddCredential, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ResendSignUpOTPReply ResendSignUpPhoneOTP(global::Greyhole.Myid.ResendSignUpOTPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendSignUpPhoneOTP(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ResendSignUpOTPReply ResendSignUpPhoneOTP(global::Greyhole.Myid.ResendSignUpOTPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResendSignUpPhoneOTP, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ResendSignUpOTPReply> ResendSignUpPhoneOTPAsync(global::Greyhole.Myid.ResendSignUpOTPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendSignUpPhoneOTPAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ResendSignUpOTPReply> ResendSignUpPhoneOTPAsync(global::Greyhole.Myid.ResendSignUpOTPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResendSignUpPhoneOTP, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ConfirmSignUpReply ConfirmSignUpPhone(global::Greyhole.Myid.ConfirmSignUpRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfirmSignUpPhone(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ConfirmSignUpReply ConfirmSignUpPhone(global::Greyhole.Myid.ConfirmSignUpRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfirmSignUpPhone, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ConfirmSignUpReply> ConfirmSignUpPhoneAsync(global::Greyhole.Myid.ConfirmSignUpRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfirmSignUpPhoneAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ConfirmSignUpReply> ConfirmSignUpPhoneAsync(global::Greyhole.Myid.ConfirmSignUpRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfirmSignUpPhone, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ResendSignUpOTPReply ResendSignUpEmailOTP(global::Greyhole.Myid.ResendSignUpOTPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendSignUpEmailOTP(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ResendSignUpOTPReply ResendSignUpEmailOTP(global::Greyhole.Myid.ResendSignUpOTPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResendSignUpEmailOTP, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ResendSignUpOTPReply> ResendSignUpEmailOTPAsync(global::Greyhole.Myid.ResendSignUpOTPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendSignUpEmailOTPAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ResendSignUpOTPReply> ResendSignUpEmailOTPAsync(global::Greyhole.Myid.ResendSignUpOTPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResendSignUpEmailOTP, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ConfirmSignUpReply ConfirmSignUpEmail(global::Greyhole.Myid.ConfirmSignUpRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfirmSignUpEmail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ConfirmSignUpReply ConfirmSignUpEmail(global::Greyhole.Myid.ConfirmSignUpRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfirmSignUpEmail, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ConfirmSignUpReply> ConfirmSignUpEmailAsync(global::Greyhole.Myid.ConfirmSignUpRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfirmSignUpEmailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ConfirmSignUpReply> ConfirmSignUpEmailAsync(global::Greyhole.Myid.ConfirmSignUpRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfirmSignUpEmail, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ResendSignInOTPReply ResendSignInOTP(global::Greyhole.Myid.ResendSignInOTPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendSignInOTP(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ResendSignInOTPReply ResendSignInOTP(global::Greyhole.Myid.ResendSignInOTPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResendSignInOTP, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ResendSignInOTPReply> ResendSignInOTPAsync(global::Greyhole.Myid.ResendSignInOTPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendSignInOTPAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ResendSignInOTPReply> ResendSignInOTPAsync(global::Greyhole.Myid.ResendSignInOTPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResendSignInOTP, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ConfirmSignInReply ConfirmSignIn(global::Greyhole.Myid.ConfirmSignInRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfirmSignIn(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ConfirmSignInReply ConfirmSignIn(global::Greyhole.Myid.ConfirmSignInRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfirmSignIn, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ConfirmSignInReply> ConfirmSignInAsync(global::Greyhole.Myid.ConfirmSignInRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfirmSignInAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ConfirmSignInReply> ConfirmSignInAsync(global::Greyhole.Myid.ConfirmSignInRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfirmSignIn, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ResendSignInOTPReply ResendSignInPhoneOTP(global::Greyhole.Myid.ResendSignInOTPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendSignInPhoneOTP(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ResendSignInOTPReply ResendSignInPhoneOTP(global::Greyhole.Myid.ResendSignInOTPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResendSignInPhoneOTP, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ResendSignInOTPReply> ResendSignInPhoneOTPAsync(global::Greyhole.Myid.ResendSignInOTPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendSignInPhoneOTPAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ResendSignInOTPReply> ResendSignInPhoneOTPAsync(global::Greyhole.Myid.ResendSignInOTPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResendSignInPhoneOTP, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ConfirmSignInReply ConfirmSignInPhone(global::Greyhole.Myid.ConfirmSignInRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfirmSignInPhone(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ConfirmSignInReply ConfirmSignInPhone(global::Greyhole.Myid.ConfirmSignInRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfirmSignInPhone, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ConfirmSignInReply> ConfirmSignInPhoneAsync(global::Greyhole.Myid.ConfirmSignInRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfirmSignInPhoneAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ConfirmSignInReply> ConfirmSignInPhoneAsync(global::Greyhole.Myid.ConfirmSignInRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfirmSignInPhone, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ResendSignInOTPReply ResendSignInEmailOTP(global::Greyhole.Myid.ResendSignInOTPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendSignInEmailOTP(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ResendSignInOTPReply ResendSignInEmailOTP(global::Greyhole.Myid.ResendSignInOTPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResendSignInEmailOTP, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ResendSignInOTPReply> ResendSignInEmailOTPAsync(global::Greyhole.Myid.ResendSignInOTPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendSignInEmailOTPAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ResendSignInOTPReply> ResendSignInEmailOTPAsync(global::Greyhole.Myid.ResendSignInOTPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResendSignInEmailOTP, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ConfirmSignInReply ConfirmSignInEmail(global::Greyhole.Myid.ConfirmSignInRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfirmSignInEmail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ConfirmSignInReply ConfirmSignInEmail(global::Greyhole.Myid.ConfirmSignInRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfirmSignInEmail, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ConfirmSignInReply> ConfirmSignInEmailAsync(global::Greyhole.Myid.ConfirmSignInRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfirmSignInEmailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ConfirmSignInReply> ConfirmSignInEmailAsync(global::Greyhole.Myid.ConfirmSignInRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfirmSignInEmail, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ConfirmCryptoWalletReply ConfirmCryptoWallet(global::Greyhole.Myid.ConfirmCryptoWalletRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfirmCryptoWallet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ConfirmCryptoWalletReply ConfirmCryptoWallet(global::Greyhole.Myid.ConfirmCryptoWalletRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfirmCryptoWallet, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ConfirmCryptoWalletReply> ConfirmCryptoWalletAsync(global::Greyhole.Myid.ConfirmCryptoWalletRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfirmCryptoWalletAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ConfirmCryptoWalletReply> ConfirmCryptoWalletAsync(global::Greyhole.Myid.ConfirmCryptoWalletRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfirmCryptoWallet, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SignOut(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SignOut(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SignOut(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SignOut, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SignOutAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SignOutAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SignOutAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SignOut, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.SignInTelegramReply SignInTelegram(global::Greyhole.Myid.SignInTelegramRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SignInTelegram(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.SignInTelegramReply SignInTelegram(global::Greyhole.Myid.SignInTelegramRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SignInTelegram, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.SignInTelegramReply> SignInTelegramAsync(global::Greyhole.Myid.SignInTelegramRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SignInTelegramAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.SignInTelegramReply> SignInTelegramAsync(global::Greyhole.Myid.SignInTelegramRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SignInTelegram, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.SignInTelegramViaTokenReply SignInTelegramViaToken(global::Greyhole.Myid.SignInTelegramViaTokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SignInTelegramViaToken(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.SignInTelegramViaTokenReply SignInTelegramViaToken(global::Greyhole.Myid.SignInTelegramViaTokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SignInTelegramViaToken, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.SignInTelegramViaTokenReply> SignInTelegramViaTokenAsync(global::Greyhole.Myid.SignInTelegramViaTokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SignInTelegramViaTokenAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.SignInTelegramViaTokenReply> SignInTelegramViaTokenAsync(global::Greyhole.Myid.SignInTelegramViaTokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SignInTelegramViaToken, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty CreatePassword(global::Greyhole.Myid.CreatePasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreatePassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty CreatePassword(global::Greyhole.Myid.CreatePasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreatePassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> CreatePasswordAsync(global::Greyhole.Myid.CreatePasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreatePasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> CreatePasswordAsync(global::Greyhole.Myid.CreatePasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreatePassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.CreateAccessTokenReply CreateAccessToken(global::Greyhole.Myid.CreateAccessTokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAccessToken(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.CreateAccessTokenReply CreateAccessToken(global::Greyhole.Myid.CreateAccessTokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateAccessToken, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.CreateAccessTokenReply> CreateAccessTokenAsync(global::Greyhole.Myid.CreateAccessTokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAccessTokenAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.CreateAccessTokenReply> CreateAccessTokenAsync(global::Greyhole.Myid.CreateAccessTokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateAccessToken, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.MeReply Me(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Me(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.MeReply Me(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Me, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.MeReply> MeAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.MeReply> MeAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Me, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangePassword(global::Greyhole.Myid.ChangePasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ChangePassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangePassword(global::Greyhole.Myid.ChangePasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ChangePassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ChangePasswordAsync(global::Greyhole.Myid.ChangePasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ChangePasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ChangePasswordAsync(global::Greyhole.Myid.ChangePasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ChangePassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateMetadata(global::Greyhole.Myid.UpdateMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateMetadata(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateMetadata(global::Greyhole.Myid.UpdateMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateMetadata, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UpdateMetadataAsync(global::Greyhole.Myid.UpdateMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateMetadataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UpdateMetadataAsync(global::Greyhole.Myid.UpdateMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateMetadata, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty AddInviter(global::Greyhole.Myid.AddInviterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddInviter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty AddInviter(global::Greyhole.Myid.AddInviterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddInviter, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> AddInviterAsync(global::Greyhole.Myid.AddInviterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddInviterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> AddInviterAsync(global::Greyhole.Myid.AddInviterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddInviter, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.UpdateEmailReply UpdateEmail(global::Greyhole.Myid.UpdateEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEmail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.UpdateEmailReply UpdateEmail(global::Greyhole.Myid.UpdateEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateEmail, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.UpdateEmailReply> UpdateEmailAsync(global::Greyhole.Myid.UpdateEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEmailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.UpdateEmailReply> UpdateEmailAsync(global::Greyhole.Myid.UpdateEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateEmail, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.VerifyEmailReply VerifyEmail(global::Greyhole.Myid.VerifyEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyEmail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.VerifyEmailReply VerifyEmail(global::Greyhole.Myid.VerifyEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_VerifyEmail, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.VerifyEmailReply> VerifyEmailAsync(global::Greyhole.Myid.VerifyEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyEmailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.VerifyEmailReply> VerifyEmailAsync(global::Greyhole.Myid.VerifyEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_VerifyEmail, null, options, request);
      }
      /// <summary>
      /// deprecated
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.UpdatePhoneNumberReply UpdatePhoneNumber(global::Greyhole.Myid.UpdatePhoneNumberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdatePhoneNumber(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// deprecated
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.UpdatePhoneNumberReply UpdatePhoneNumber(global::Greyhole.Myid.UpdatePhoneNumberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdatePhoneNumber, null, options, request);
      }
      /// <summary>
      /// deprecated
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.UpdatePhoneNumberReply> UpdatePhoneNumberAsync(global::Greyhole.Myid.UpdatePhoneNumberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdatePhoneNumberAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// deprecated
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.UpdatePhoneNumberReply> UpdatePhoneNumberAsync(global::Greyhole.Myid.UpdatePhoneNumberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdatePhoneNumber, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.UpdatePhoneNumberReply UpdatePhoneNumberV2(global::Greyhole.Myid.UpdatePhoneNumberV2Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdatePhoneNumberV2(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.UpdatePhoneNumberReply UpdatePhoneNumberV2(global::Greyhole.Myid.UpdatePhoneNumberV2Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdatePhoneNumberV2, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.UpdatePhoneNumberReply> UpdatePhoneNumberV2Async(global::Greyhole.Myid.UpdatePhoneNumberV2Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdatePhoneNumberV2Async(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.UpdatePhoneNumberReply> UpdatePhoneNumberV2Async(global::Greyhole.Myid.UpdatePhoneNumberV2Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdatePhoneNumberV2, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.VerifyPhoneNumberReply VerifyPhoneNumber(global::Greyhole.Myid.VerifyPhoneNumberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyPhoneNumber(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.VerifyPhoneNumberReply VerifyPhoneNumber(global::Greyhole.Myid.VerifyPhoneNumberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_VerifyPhoneNumber, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.VerifyPhoneNumberReply> VerifyPhoneNumberAsync(global::Greyhole.Myid.VerifyPhoneNumberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyPhoneNumberAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.VerifyPhoneNumberReply> VerifyPhoneNumberAsync(global::Greyhole.Myid.VerifyPhoneNumberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_VerifyPhoneNumber, null, options, request);
      }
      /// <summary>
      /// deprecated
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ResetPasswordReply ResetPassword(global::Greyhole.Myid.ResetPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetPassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// deprecated
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ResetPasswordReply ResetPassword(global::Greyhole.Myid.ResetPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetPassword, null, options, request);
      }
      /// <summary>
      /// deprecated
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ResetPasswordReply> ResetPasswordAsync(global::Greyhole.Myid.ResetPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetPasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// deprecated
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ResetPasswordReply> ResetPasswordAsync(global::Greyhole.Myid.ResetPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetPassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ResetPasswordReply ResetPasswordV2(global::Greyhole.Myid.ResetPasswordV2Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetPasswordV2(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ResetPasswordReply ResetPasswordV2(global::Greyhole.Myid.ResetPasswordV2Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetPasswordV2, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ResetPasswordReply> ResetPasswordV2Async(global::Greyhole.Myid.ResetPasswordV2Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetPasswordV2Async(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ResetPasswordReply> ResetPasswordV2Async(global::Greyhole.Myid.ResetPasswordV2Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetPasswordV2, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty VerifyResetPassword(global::Greyhole.Myid.VerifyResetPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyResetPassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty VerifyResetPassword(global::Greyhole.Myid.VerifyResetPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_VerifyResetPassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> VerifyResetPasswordAsync(global::Greyhole.Myid.VerifyResetPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyResetPasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> VerifyResetPasswordAsync(global::Greyhole.Myid.VerifyResetPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_VerifyResetPassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SubmitResetPassword(global::Greyhole.Myid.SubmitResetPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubmitResetPassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SubmitResetPassword(global::Greyhole.Myid.SubmitResetPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SubmitResetPassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SubmitResetPasswordAsync(global::Greyhole.Myid.SubmitResetPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubmitResetPasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SubmitResetPasswordAsync(global::Greyhole.Myid.SubmitResetPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SubmitResetPassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangePhonePassword(global::Greyhole.Myid.ChangePasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ChangePhonePassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangePhonePassword(global::Greyhole.Myid.ChangePasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ChangePhonePassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ChangePhonePasswordAsync(global::Greyhole.Myid.ChangePasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ChangePhonePasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ChangePhonePasswordAsync(global::Greyhole.Myid.ChangePasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ChangePhonePassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ResetPasswordReply ResetPhonePassword(global::Greyhole.Myid.ResetPasswordV2Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetPhonePassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ResetPasswordReply ResetPhonePassword(global::Greyhole.Myid.ResetPasswordV2Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetPhonePassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ResetPasswordReply> ResetPhonePasswordAsync(global::Greyhole.Myid.ResetPasswordV2Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetPhonePasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ResetPasswordReply> ResetPhonePasswordAsync(global::Greyhole.Myid.ResetPasswordV2Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetPhonePassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty VerifyResetPhonePassword(global::Greyhole.Myid.VerifyResetPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyResetPhonePassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty VerifyResetPhonePassword(global::Greyhole.Myid.VerifyResetPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_VerifyResetPhonePassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> VerifyResetPhonePasswordAsync(global::Greyhole.Myid.VerifyResetPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyResetPhonePasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> VerifyResetPhonePasswordAsync(global::Greyhole.Myid.VerifyResetPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_VerifyResetPhonePassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SubmitResetPhonePassword(global::Greyhole.Myid.SubmitResetPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubmitResetPhonePassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SubmitResetPhonePassword(global::Greyhole.Myid.SubmitResetPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SubmitResetPhonePassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SubmitResetPhonePasswordAsync(global::Greyhole.Myid.SubmitResetPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubmitResetPhonePasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SubmitResetPhonePasswordAsync(global::Greyhole.Myid.SubmitResetPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SubmitResetPhonePassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangeEmailPassword(global::Greyhole.Myid.ChangePasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ChangeEmailPassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangeEmailPassword(global::Greyhole.Myid.ChangePasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ChangeEmailPassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ChangeEmailPasswordAsync(global::Greyhole.Myid.ChangePasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ChangeEmailPasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ChangeEmailPasswordAsync(global::Greyhole.Myid.ChangePasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ChangeEmailPassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ResetPasswordReply ResetEmailPassword(global::Greyhole.Myid.ResetPasswordV2Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetEmailPassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ResetPasswordReply ResetEmailPassword(global::Greyhole.Myid.ResetPasswordV2Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetEmailPassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ResetPasswordReply> ResetEmailPasswordAsync(global::Greyhole.Myid.ResetPasswordV2Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetEmailPasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ResetPasswordReply> ResetEmailPasswordAsync(global::Greyhole.Myid.ResetPasswordV2Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetEmailPassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty VerifyResetEmailPassword(global::Greyhole.Myid.VerifyResetPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyResetEmailPassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty VerifyResetEmailPassword(global::Greyhole.Myid.VerifyResetPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_VerifyResetEmailPassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> VerifyResetEmailPasswordAsync(global::Greyhole.Myid.VerifyResetPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyResetEmailPasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> VerifyResetEmailPasswordAsync(global::Greyhole.Myid.VerifyResetPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_VerifyResetEmailPassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SubmitResetEmailPassword(global::Greyhole.Myid.SubmitResetPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubmitResetEmailPassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SubmitResetEmailPassword(global::Greyhole.Myid.SubmitResetPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SubmitResetEmailPassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SubmitResetEmailPasswordAsync(global::Greyhole.Myid.SubmitResetPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubmitResetEmailPasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SubmitResetEmailPasswordAsync(global::Greyhole.Myid.SubmitResetPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SubmitResetEmailPassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty CheckCredential(global::Greyhole.Myid.CheckCredentialRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckCredential(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty CheckCredential(global::Greyhole.Myid.CheckCredentialRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CheckCredential, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> CheckCredentialAsync(global::Greyhole.Myid.CheckCredentialRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckCredentialAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> CheckCredentialAsync(global::Greyhole.Myid.CheckCredentialRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CheckCredential, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override MyIDClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new MyIDClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(MyIDBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SignUp, serviceImpl.SignUp)
          .AddMethod(__Method_SignIn, serviceImpl.SignIn)
          .AddMethod(__Method_SignUpV2, serviceImpl.SignUpV2)
          .AddMethod(__Method_SignUpOneClick, serviceImpl.SignUpOneClick)
          .AddMethod(__Method_SaveOneClickInfo, serviceImpl.SaveOneClickInfo)
          .AddMethod(__Method_SignUpPhone, serviceImpl.SignUpPhone)
          .AddMethod(__Method_SignUpEmail, serviceImpl.SignUpEmail)
          .AddMethod(__Method_SignUpCryptoWallet, serviceImpl.SignUpCryptoWallet)
          .AddMethod(__Method_SignInV2, serviceImpl.SignInV2)
          .AddMethod(__Method_SignInPhone, serviceImpl.SignInPhone)
          .AddMethod(__Method_SignInEmail, serviceImpl.SignInEmail)
          .AddMethod(__Method_SignInCryptoWallet, serviceImpl.SignInCryptoWallet)
          .AddMethod(__Method_AddCredential, serviceImpl.AddCredential)
          .AddMethod(__Method_ResendSignUpPhoneOTP, serviceImpl.ResendSignUpPhoneOTP)
          .AddMethod(__Method_ConfirmSignUpPhone, serviceImpl.ConfirmSignUpPhone)
          .AddMethod(__Method_ResendSignUpEmailOTP, serviceImpl.ResendSignUpEmailOTP)
          .AddMethod(__Method_ConfirmSignUpEmail, serviceImpl.ConfirmSignUpEmail)
          .AddMethod(__Method_ResendSignInOTP, serviceImpl.ResendSignInOTP)
          .AddMethod(__Method_ConfirmSignIn, serviceImpl.ConfirmSignIn)
          .AddMethod(__Method_ResendSignInPhoneOTP, serviceImpl.ResendSignInPhoneOTP)
          .AddMethod(__Method_ConfirmSignInPhone, serviceImpl.ConfirmSignInPhone)
          .AddMethod(__Method_ResendSignInEmailOTP, serviceImpl.ResendSignInEmailOTP)
          .AddMethod(__Method_ConfirmSignInEmail, serviceImpl.ConfirmSignInEmail)
          .AddMethod(__Method_ConfirmCryptoWallet, serviceImpl.ConfirmCryptoWallet)
          .AddMethod(__Method_SignOut, serviceImpl.SignOut)
          .AddMethod(__Method_SignInTelegram, serviceImpl.SignInTelegram)
          .AddMethod(__Method_SignInTelegramViaToken, serviceImpl.SignInTelegramViaToken)
          .AddMethod(__Method_CreatePassword, serviceImpl.CreatePassword)
          .AddMethod(__Method_CreateAccessToken, serviceImpl.CreateAccessToken)
          .AddMethod(__Method_Me, serviceImpl.Me)
          .AddMethod(__Method_ChangePassword, serviceImpl.ChangePassword)
          .AddMethod(__Method_UpdateMetadata, serviceImpl.UpdateMetadata)
          .AddMethod(__Method_AddInviter, serviceImpl.AddInviter)
          .AddMethod(__Method_UpdateEmail, serviceImpl.UpdateEmail)
          .AddMethod(__Method_VerifyEmail, serviceImpl.VerifyEmail)
          .AddMethod(__Method_UpdatePhoneNumber, serviceImpl.UpdatePhoneNumber)
          .AddMethod(__Method_UpdatePhoneNumberV2, serviceImpl.UpdatePhoneNumberV2)
          .AddMethod(__Method_VerifyPhoneNumber, serviceImpl.VerifyPhoneNumber)
          .AddMethod(__Method_ResetPassword, serviceImpl.ResetPassword)
          .AddMethod(__Method_ResetPasswordV2, serviceImpl.ResetPasswordV2)
          .AddMethod(__Method_VerifyResetPassword, serviceImpl.VerifyResetPassword)
          .AddMethod(__Method_SubmitResetPassword, serviceImpl.SubmitResetPassword)
          .AddMethod(__Method_ChangePhonePassword, serviceImpl.ChangePhonePassword)
          .AddMethod(__Method_ResetPhonePassword, serviceImpl.ResetPhonePassword)
          .AddMethod(__Method_VerifyResetPhonePassword, serviceImpl.VerifyResetPhonePassword)
          .AddMethod(__Method_SubmitResetPhonePassword, serviceImpl.SubmitResetPhonePassword)
          .AddMethod(__Method_ChangeEmailPassword, serviceImpl.ChangeEmailPassword)
          .AddMethod(__Method_ResetEmailPassword, serviceImpl.ResetEmailPassword)
          .AddMethod(__Method_VerifyResetEmailPassword, serviceImpl.VerifyResetEmailPassword)
          .AddMethod(__Method_SubmitResetEmailPassword, serviceImpl.SubmitResetEmailPassword)
          .AddMethod(__Method_CheckCredential, serviceImpl.CheckCredential).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, MyIDBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_SignUp, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.SignUpRequest, global::Greyhole.Myid.SignUpReply>(serviceImpl.SignUp));
      serviceBinder.AddMethod(__Method_SignIn, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.SignInRequest, global::Greyhole.Myid.SignInReply>(serviceImpl.SignIn));
      serviceBinder.AddMethod(__Method_SignUpV2, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.SignUpV2Request, global::Greyhole.Myid.SignUpReply>(serviceImpl.SignUpV2));
      serviceBinder.AddMethod(__Method_SignUpOneClick, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.SignUpOneClickRequest, global::Greyhole.Myid.SignUpOneClickReply>(serviceImpl.SignUpOneClick));
      serviceBinder.AddMethod(__Method_SaveOneClickInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.SaveOneClickInfoRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.SaveOneClickInfo));
      serviceBinder.AddMethod(__Method_SignUpPhone, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.SignUpPhoneRequest, global::Greyhole.Myid.SignUpPhoneReply>(serviceImpl.SignUpPhone));
      serviceBinder.AddMethod(__Method_SignUpEmail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.SignUpEmailRequest, global::Greyhole.Myid.SignUpEmailReply>(serviceImpl.SignUpEmail));
      serviceBinder.AddMethod(__Method_SignUpCryptoWallet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.SignUpCryptoWalletRequest, global::Greyhole.Myid.SignUpCryptoWalletReply>(serviceImpl.SignUpCryptoWallet));
      serviceBinder.AddMethod(__Method_SignInV2, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.SignInV2Request, global::Greyhole.Myid.SignInReply>(serviceImpl.SignInV2));
      serviceBinder.AddMethod(__Method_SignInPhone, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.SignInPhoneRequest, global::Greyhole.Myid.SignInReply>(serviceImpl.SignInPhone));
      serviceBinder.AddMethod(__Method_SignInEmail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.SignInEmailRequest, global::Greyhole.Myid.SignInReply>(serviceImpl.SignInEmail));
      serviceBinder.AddMethod(__Method_SignInCryptoWallet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.SignInCryptoWalletRequest, global::Greyhole.Myid.SignInCryptoWalletReply>(serviceImpl.SignInCryptoWallet));
      serviceBinder.AddMethod(__Method_AddCredential, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.AddCredentialRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.AddCredential));
      serviceBinder.AddMethod(__Method_ResendSignUpPhoneOTP, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.ResendSignUpOTPRequest, global::Greyhole.Myid.ResendSignUpOTPReply>(serviceImpl.ResendSignUpPhoneOTP));
      serviceBinder.AddMethod(__Method_ConfirmSignUpPhone, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.ConfirmSignUpRequest, global::Greyhole.Myid.ConfirmSignUpReply>(serviceImpl.ConfirmSignUpPhone));
      serviceBinder.AddMethod(__Method_ResendSignUpEmailOTP, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.ResendSignUpOTPRequest, global::Greyhole.Myid.ResendSignUpOTPReply>(serviceImpl.ResendSignUpEmailOTP));
      serviceBinder.AddMethod(__Method_ConfirmSignUpEmail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.ConfirmSignUpRequest, global::Greyhole.Myid.ConfirmSignUpReply>(serviceImpl.ConfirmSignUpEmail));
      serviceBinder.AddMethod(__Method_ResendSignInOTP, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.ResendSignInOTPRequest, global::Greyhole.Myid.ResendSignInOTPReply>(serviceImpl.ResendSignInOTP));
      serviceBinder.AddMethod(__Method_ConfirmSignIn, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.ConfirmSignInRequest, global::Greyhole.Myid.ConfirmSignInReply>(serviceImpl.ConfirmSignIn));
      serviceBinder.AddMethod(__Method_ResendSignInPhoneOTP, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.ResendSignInOTPRequest, global::Greyhole.Myid.ResendSignInOTPReply>(serviceImpl.ResendSignInPhoneOTP));
      serviceBinder.AddMethod(__Method_ConfirmSignInPhone, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.ConfirmSignInRequest, global::Greyhole.Myid.ConfirmSignInReply>(serviceImpl.ConfirmSignInPhone));
      serviceBinder.AddMethod(__Method_ResendSignInEmailOTP, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.ResendSignInOTPRequest, global::Greyhole.Myid.ResendSignInOTPReply>(serviceImpl.ResendSignInEmailOTP));
      serviceBinder.AddMethod(__Method_ConfirmSignInEmail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.ConfirmSignInRequest, global::Greyhole.Myid.ConfirmSignInReply>(serviceImpl.ConfirmSignInEmail));
      serviceBinder.AddMethod(__Method_ConfirmCryptoWallet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.ConfirmCryptoWalletRequest, global::Greyhole.Myid.ConfirmCryptoWalletReply>(serviceImpl.ConfirmCryptoWallet));
      serviceBinder.AddMethod(__Method_SignOut, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.SignOut));
      serviceBinder.AddMethod(__Method_SignInTelegram, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.SignInTelegramRequest, global::Greyhole.Myid.SignInTelegramReply>(serviceImpl.SignInTelegram));
      serviceBinder.AddMethod(__Method_SignInTelegramViaToken, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.SignInTelegramViaTokenRequest, global::Greyhole.Myid.SignInTelegramViaTokenReply>(serviceImpl.SignInTelegramViaToken));
      serviceBinder.AddMethod(__Method_CreatePassword, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.CreatePasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.CreatePassword));
      serviceBinder.AddMethod(__Method_CreateAccessToken, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.CreateAccessTokenRequest, global::Greyhole.Myid.CreateAccessTokenReply>(serviceImpl.CreateAccessToken));
      serviceBinder.AddMethod(__Method_Me, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::Greyhole.Myid.MeReply>(serviceImpl.Me));
      serviceBinder.AddMethod(__Method_ChangePassword, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.ChangePasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.ChangePassword));
      serviceBinder.AddMethod(__Method_UpdateMetadata, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.UpdateMetadataRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.UpdateMetadata));
      serviceBinder.AddMethod(__Method_AddInviter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.AddInviterRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.AddInviter));
      serviceBinder.AddMethod(__Method_UpdateEmail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.UpdateEmailRequest, global::Greyhole.Myid.UpdateEmailReply>(serviceImpl.UpdateEmail));
      serviceBinder.AddMethod(__Method_VerifyEmail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.VerifyEmailRequest, global::Greyhole.Myid.VerifyEmailReply>(serviceImpl.VerifyEmail));
      serviceBinder.AddMethod(__Method_UpdatePhoneNumber, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.UpdatePhoneNumberRequest, global::Greyhole.Myid.UpdatePhoneNumberReply>(serviceImpl.UpdatePhoneNumber));
      serviceBinder.AddMethod(__Method_UpdatePhoneNumberV2, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.UpdatePhoneNumberV2Request, global::Greyhole.Myid.UpdatePhoneNumberReply>(serviceImpl.UpdatePhoneNumberV2));
      serviceBinder.AddMethod(__Method_VerifyPhoneNumber, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.VerifyPhoneNumberRequest, global::Greyhole.Myid.VerifyPhoneNumberReply>(serviceImpl.VerifyPhoneNumber));
      serviceBinder.AddMethod(__Method_ResetPassword, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.ResetPasswordRequest, global::Greyhole.Myid.ResetPasswordReply>(serviceImpl.ResetPassword));
      serviceBinder.AddMethod(__Method_ResetPasswordV2, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.ResetPasswordV2Request, global::Greyhole.Myid.ResetPasswordReply>(serviceImpl.ResetPasswordV2));
      serviceBinder.AddMethod(__Method_VerifyResetPassword, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.VerifyResetPasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.VerifyResetPassword));
      serviceBinder.AddMethod(__Method_SubmitResetPassword, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.SubmitResetPasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.SubmitResetPassword));
      serviceBinder.AddMethod(__Method_ChangePhonePassword, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.ChangePasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.ChangePhonePassword));
      serviceBinder.AddMethod(__Method_ResetPhonePassword, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.ResetPasswordV2Request, global::Greyhole.Myid.ResetPasswordReply>(serviceImpl.ResetPhonePassword));
      serviceBinder.AddMethod(__Method_VerifyResetPhonePassword, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.VerifyResetPasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.VerifyResetPhonePassword));
      serviceBinder.AddMethod(__Method_SubmitResetPhonePassword, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.SubmitResetPasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.SubmitResetPhonePassword));
      serviceBinder.AddMethod(__Method_ChangeEmailPassword, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.ChangePasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.ChangeEmailPassword));
      serviceBinder.AddMethod(__Method_ResetEmailPassword, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.ResetPasswordV2Request, global::Greyhole.Myid.ResetPasswordReply>(serviceImpl.ResetEmailPassword));
      serviceBinder.AddMethod(__Method_VerifyResetEmailPassword, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.VerifyResetPasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.VerifyResetEmailPassword));
      serviceBinder.AddMethod(__Method_SubmitResetEmailPassword, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.SubmitResetPasswordRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.SubmitResetEmailPassword));
      serviceBinder.AddMethod(__Method_CheckCredential, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.CheckCredentialRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.CheckCredential));
    }

  }
  public static partial class TheCoffeeHouse
  {
    static readonly string __ServiceName = "greyhole.myid.TheCoffeeHouse";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.CreateUserRequest> __Marshaller_greyhole_myid_CreateUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.CreateUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.CreateUserReply> __Marshaller_greyhole_myid_CreateUserReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.CreateUserReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.ListUsersRequest> __Marshaller_greyhole_myid_ListUsersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.ListUsersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.ListUsersReply> __Marshaller_greyhole_myid_ListUsersReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.ListUsersReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.ListUsersV2Request> __Marshaller_greyhole_myid_ListUsersV2Request = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.ListUsersV2Request.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.ListUsersV2Reply> __Marshaller_greyhole_myid_ListUsersV2Reply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.ListUsersV2Reply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.UpdateUserRequest> __Marshaller_greyhole_myid_UpdateUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.UpdateUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.UpdateUserReply> __Marshaller_greyhole_myid_UpdateUserReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.UpdateUserReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.LockUserRequest> __Marshaller_greyhole_myid_LockUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.LockUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.LockUserReply> __Marshaller_greyhole_myid_LockUserReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.LockUserReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.LockUsersRequest> __Marshaller_greyhole_myid_LockUsersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.LockUsersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.LockUsersReply> __Marshaller_greyhole_myid_LockUsersReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.LockUsersReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.UnlockUserRequest> __Marshaller_greyhole_myid_UnlockUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.UnlockUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.UnlockUserReply> __Marshaller_greyhole_myid_UnlockUserReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.UnlockUserReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.BanUserRequest> __Marshaller_greyhole_myid_BanUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.BanUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.BanUserReply> __Marshaller_greyhole_myid_BanUserReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.BanUserReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.BanUsersRequest> __Marshaller_greyhole_myid_BanUsersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.BanUsersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.BanUsersReply> __Marshaller_greyhole_myid_BanUsersReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.BanUsersReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.UnbanUserRequest> __Marshaller_greyhole_myid_UnbanUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.UnbanUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.UnbanUserReply> __Marshaller_greyhole_myid_UnbanUserReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.UnbanUserReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.GetUserRequest> __Marshaller_greyhole_myid_GetUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.GetUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.GetUserReply> __Marshaller_greyhole_myid_GetUserReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.GetUserReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.ResendCreatePasswordOTPRequest> __Marshaller_greyhole_myid_ResendCreatePasswordOTPRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.ResendCreatePasswordOTPRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.ResendCreatePasswordOTPReply> __Marshaller_greyhole_myid_ResendCreatePasswordOTPReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.ResendCreatePasswordOTPReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.GetUsersRequest> __Marshaller_greyhole_myid_GetUsersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.GetUsersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.GetUsersReply> __Marshaller_greyhole_myid_GetUsersReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.GetUsersReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.ResendResetPasswordOTPRequest> __Marshaller_greyhole_myid_ResendResetPasswordOTPRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.ResendResetPasswordOTPRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.ResendResetPasswordOTPReply> __Marshaller_greyhole_myid_ResendResetPasswordOTPReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.ResendResetPasswordOTPReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.ListStatusLogsRequest> __Marshaller_greyhole_myid_ListStatusLogsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.ListStatusLogsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.ListStatusLogsReply> __Marshaller_greyhole_myid_ListStatusLogsReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.ListStatusLogsReply.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.CreateUserRequest, global::Greyhole.Myid.CreateUserReply> __Method_CreateUser = new grpc::Method<global::Greyhole.Myid.CreateUserRequest, global::Greyhole.Myid.CreateUserReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateUser",
        __Marshaller_greyhole_myid_CreateUserRequest,
        __Marshaller_greyhole_myid_CreateUserReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.ListUsersRequest, global::Greyhole.Myid.ListUsersReply> __Method_ListUsers = new grpc::Method<global::Greyhole.Myid.ListUsersRequest, global::Greyhole.Myid.ListUsersReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListUsers",
        __Marshaller_greyhole_myid_ListUsersRequest,
        __Marshaller_greyhole_myid_ListUsersReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.ListUsersV2Request, global::Greyhole.Myid.ListUsersV2Reply> __Method_ListUsersV2 = new grpc::Method<global::Greyhole.Myid.ListUsersV2Request, global::Greyhole.Myid.ListUsersV2Reply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListUsersV2",
        __Marshaller_greyhole_myid_ListUsersV2Request,
        __Marshaller_greyhole_myid_ListUsersV2Reply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.UpdateUserRequest, global::Greyhole.Myid.UpdateUserReply> __Method_UpdateUser = new grpc::Method<global::Greyhole.Myid.UpdateUserRequest, global::Greyhole.Myid.UpdateUserReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateUser",
        __Marshaller_greyhole_myid_UpdateUserRequest,
        __Marshaller_greyhole_myid_UpdateUserReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.LockUserRequest, global::Greyhole.Myid.LockUserReply> __Method_LockUser = new grpc::Method<global::Greyhole.Myid.LockUserRequest, global::Greyhole.Myid.LockUserReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LockUser",
        __Marshaller_greyhole_myid_LockUserRequest,
        __Marshaller_greyhole_myid_LockUserReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.LockUsersRequest, global::Greyhole.Myid.LockUsersReply> __Method_LockUsers = new grpc::Method<global::Greyhole.Myid.LockUsersRequest, global::Greyhole.Myid.LockUsersReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LockUsers",
        __Marshaller_greyhole_myid_LockUsersRequest,
        __Marshaller_greyhole_myid_LockUsersReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.UnlockUserRequest, global::Greyhole.Myid.UnlockUserReply> __Method_UnlockUser = new grpc::Method<global::Greyhole.Myid.UnlockUserRequest, global::Greyhole.Myid.UnlockUserReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UnlockUser",
        __Marshaller_greyhole_myid_UnlockUserRequest,
        __Marshaller_greyhole_myid_UnlockUserReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.BanUserRequest, global::Greyhole.Myid.BanUserReply> __Method_BanUser = new grpc::Method<global::Greyhole.Myid.BanUserRequest, global::Greyhole.Myid.BanUserReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BanUser",
        __Marshaller_greyhole_myid_BanUserRequest,
        __Marshaller_greyhole_myid_BanUserReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.BanUsersRequest, global::Greyhole.Myid.BanUsersReply> __Method_BanUsers = new grpc::Method<global::Greyhole.Myid.BanUsersRequest, global::Greyhole.Myid.BanUsersReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BanUsers",
        __Marshaller_greyhole_myid_BanUsersRequest,
        __Marshaller_greyhole_myid_BanUsersReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.UnbanUserRequest, global::Greyhole.Myid.UnbanUserReply> __Method_UnbanUser = new grpc::Method<global::Greyhole.Myid.UnbanUserRequest, global::Greyhole.Myid.UnbanUserReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UnbanUser",
        __Marshaller_greyhole_myid_UnbanUserRequest,
        __Marshaller_greyhole_myid_UnbanUserReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.GetUserRequest, global::Greyhole.Myid.GetUserReply> __Method_GetUser = new grpc::Method<global::Greyhole.Myid.GetUserRequest, global::Greyhole.Myid.GetUserReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUser",
        __Marshaller_greyhole_myid_GetUserRequest,
        __Marshaller_greyhole_myid_GetUserReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.ResendCreatePasswordOTPRequest, global::Greyhole.Myid.ResendCreatePasswordOTPReply> __Method_ResendCreatePasswordOTP = new grpc::Method<global::Greyhole.Myid.ResendCreatePasswordOTPRequest, global::Greyhole.Myid.ResendCreatePasswordOTPReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResendCreatePasswordOTP",
        __Marshaller_greyhole_myid_ResendCreatePasswordOTPRequest,
        __Marshaller_greyhole_myid_ResendCreatePasswordOTPReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.GetUsersRequest, global::Greyhole.Myid.GetUsersReply> __Method_GetUsers = new grpc::Method<global::Greyhole.Myid.GetUsersRequest, global::Greyhole.Myid.GetUsersReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUsers",
        __Marshaller_greyhole_myid_GetUsersRequest,
        __Marshaller_greyhole_myid_GetUsersReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.ResendResetPasswordOTPRequest, global::Greyhole.Myid.ResendResetPasswordOTPReply> __Method_ResendResetPasswordOTP = new grpc::Method<global::Greyhole.Myid.ResendResetPasswordOTPRequest, global::Greyhole.Myid.ResendResetPasswordOTPReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResendResetPasswordOTP",
        __Marshaller_greyhole_myid_ResendResetPasswordOTPRequest,
        __Marshaller_greyhole_myid_ResendResetPasswordOTPReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.ListStatusLogsRequest, global::Greyhole.Myid.ListStatusLogsReply> __Method_ListStatusLogs = new grpc::Method<global::Greyhole.Myid.ListStatusLogsRequest, global::Greyhole.Myid.ListStatusLogsReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListStatusLogs",
        __Marshaller_greyhole_myid_ListStatusLogsRequest,
        __Marshaller_greyhole_myid_ListStatusLogsReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Greyhole.Myid.MyidReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of TheCoffeeHouse</summary>
    [grpc::BindServiceMethod(typeof(TheCoffeeHouse), "BindService")]
    public abstract partial class TheCoffeeHouseBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.CreateUserReply> CreateUser(global::Greyhole.Myid.CreateUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.ListUsersReply> ListUsers(global::Greyhole.Myid.ListUsersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// pagination with page &amp; page_size
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.ListUsersV2Reply> ListUsersV2(global::Greyhole.Myid.ListUsersV2Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.UpdateUserReply> UpdateUser(global::Greyhole.Myid.UpdateUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.LockUserReply> LockUser(global::Greyhole.Myid.LockUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.LockUsersReply> LockUsers(global::Greyhole.Myid.LockUsersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.UnlockUserReply> UnlockUser(global::Greyhole.Myid.UnlockUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.BanUserReply> BanUser(global::Greyhole.Myid.BanUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.BanUsersReply> BanUsers(global::Greyhole.Myid.BanUsersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.UnbanUserReply> UnbanUser(global::Greyhole.Myid.UnbanUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.GetUserReply> GetUser(global::Greyhole.Myid.GetUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.ResendCreatePasswordOTPReply> ResendCreatePasswordOTP(global::Greyhole.Myid.ResendCreatePasswordOTPRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.GetUsersReply> GetUsers(global::Greyhole.Myid.GetUsersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.ResendResetPasswordOTPReply> ResendResetPasswordOTP(global::Greyhole.Myid.ResendResetPasswordOTPRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.ListStatusLogsReply> ListStatusLogs(global::Greyhole.Myid.ListStatusLogsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for TheCoffeeHouse</summary>
    public partial class TheCoffeeHouseClient : grpc::ClientBase<TheCoffeeHouseClient>
    {
      /// <summary>Creates a new client for TheCoffeeHouse</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public TheCoffeeHouseClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for TheCoffeeHouse that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public TheCoffeeHouseClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected TheCoffeeHouseClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected TheCoffeeHouseClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.CreateUserReply CreateUser(global::Greyhole.Myid.CreateUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.CreateUserReply CreateUser(global::Greyhole.Myid.CreateUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateUser, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.CreateUserReply> CreateUserAsync(global::Greyhole.Myid.CreateUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.CreateUserReply> CreateUserAsync(global::Greyhole.Myid.CreateUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateUser, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ListUsersReply ListUsers(global::Greyhole.Myid.ListUsersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUsers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ListUsersReply ListUsers(global::Greyhole.Myid.ListUsersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListUsers, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ListUsersReply> ListUsersAsync(global::Greyhole.Myid.ListUsersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUsersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ListUsersReply> ListUsersAsync(global::Greyhole.Myid.ListUsersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListUsers, null, options, request);
      }
      /// <summary>
      /// pagination with page &amp; page_size
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ListUsersV2Reply ListUsersV2(global::Greyhole.Myid.ListUsersV2Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUsersV2(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// pagination with page &amp; page_size
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ListUsersV2Reply ListUsersV2(global::Greyhole.Myid.ListUsersV2Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListUsersV2, null, options, request);
      }
      /// <summary>
      /// pagination with page &amp; page_size
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ListUsersV2Reply> ListUsersV2Async(global::Greyhole.Myid.ListUsersV2Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUsersV2Async(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// pagination with page &amp; page_size
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ListUsersV2Reply> ListUsersV2Async(global::Greyhole.Myid.ListUsersV2Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListUsersV2, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.UpdateUserReply UpdateUser(global::Greyhole.Myid.UpdateUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.UpdateUserReply UpdateUser(global::Greyhole.Myid.UpdateUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateUser, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.UpdateUserReply> UpdateUserAsync(global::Greyhole.Myid.UpdateUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.UpdateUserReply> UpdateUserAsync(global::Greyhole.Myid.UpdateUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateUser, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.LockUserReply LockUser(global::Greyhole.Myid.LockUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LockUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.LockUserReply LockUser(global::Greyhole.Myid.LockUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LockUser, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.LockUserReply> LockUserAsync(global::Greyhole.Myid.LockUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LockUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.LockUserReply> LockUserAsync(global::Greyhole.Myid.LockUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LockUser, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.LockUsersReply LockUsers(global::Greyhole.Myid.LockUsersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LockUsers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.LockUsersReply LockUsers(global::Greyhole.Myid.LockUsersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LockUsers, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.LockUsersReply> LockUsersAsync(global::Greyhole.Myid.LockUsersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LockUsersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.LockUsersReply> LockUsersAsync(global::Greyhole.Myid.LockUsersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LockUsers, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.UnlockUserReply UnlockUser(global::Greyhole.Myid.UnlockUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnlockUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.UnlockUserReply UnlockUser(global::Greyhole.Myid.UnlockUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UnlockUser, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.UnlockUserReply> UnlockUserAsync(global::Greyhole.Myid.UnlockUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnlockUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.UnlockUserReply> UnlockUserAsync(global::Greyhole.Myid.UnlockUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UnlockUser, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.BanUserReply BanUser(global::Greyhole.Myid.BanUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BanUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.BanUserReply BanUser(global::Greyhole.Myid.BanUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BanUser, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.BanUserReply> BanUserAsync(global::Greyhole.Myid.BanUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BanUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.BanUserReply> BanUserAsync(global::Greyhole.Myid.BanUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BanUser, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.BanUsersReply BanUsers(global::Greyhole.Myid.BanUsersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BanUsers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.BanUsersReply BanUsers(global::Greyhole.Myid.BanUsersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BanUsers, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.BanUsersReply> BanUsersAsync(global::Greyhole.Myid.BanUsersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BanUsersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.BanUsersReply> BanUsersAsync(global::Greyhole.Myid.BanUsersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BanUsers, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.UnbanUserReply UnbanUser(global::Greyhole.Myid.UnbanUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnbanUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.UnbanUserReply UnbanUser(global::Greyhole.Myid.UnbanUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UnbanUser, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.UnbanUserReply> UnbanUserAsync(global::Greyhole.Myid.UnbanUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnbanUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.UnbanUserReply> UnbanUserAsync(global::Greyhole.Myid.UnbanUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UnbanUser, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.GetUserReply GetUser(global::Greyhole.Myid.GetUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.GetUserReply GetUser(global::Greyhole.Myid.GetUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUser, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.GetUserReply> GetUserAsync(global::Greyhole.Myid.GetUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.GetUserReply> GetUserAsync(global::Greyhole.Myid.GetUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUser, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ResendCreatePasswordOTPReply ResendCreatePasswordOTP(global::Greyhole.Myid.ResendCreatePasswordOTPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendCreatePasswordOTP(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ResendCreatePasswordOTPReply ResendCreatePasswordOTP(global::Greyhole.Myid.ResendCreatePasswordOTPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResendCreatePasswordOTP, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ResendCreatePasswordOTPReply> ResendCreatePasswordOTPAsync(global::Greyhole.Myid.ResendCreatePasswordOTPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendCreatePasswordOTPAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ResendCreatePasswordOTPReply> ResendCreatePasswordOTPAsync(global::Greyhole.Myid.ResendCreatePasswordOTPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResendCreatePasswordOTP, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.GetUsersReply GetUsers(global::Greyhole.Myid.GetUsersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUsers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.GetUsersReply GetUsers(global::Greyhole.Myid.GetUsersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUsers, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.GetUsersReply> GetUsersAsync(global::Greyhole.Myid.GetUsersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUsersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.GetUsersReply> GetUsersAsync(global::Greyhole.Myid.GetUsersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUsers, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ResendResetPasswordOTPReply ResendResetPasswordOTP(global::Greyhole.Myid.ResendResetPasswordOTPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendResetPasswordOTP(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ResendResetPasswordOTPReply ResendResetPasswordOTP(global::Greyhole.Myid.ResendResetPasswordOTPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResendResetPasswordOTP, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ResendResetPasswordOTPReply> ResendResetPasswordOTPAsync(global::Greyhole.Myid.ResendResetPasswordOTPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendResetPasswordOTPAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ResendResetPasswordOTPReply> ResendResetPasswordOTPAsync(global::Greyhole.Myid.ResendResetPasswordOTPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResendResetPasswordOTP, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ListStatusLogsReply ListStatusLogs(global::Greyhole.Myid.ListStatusLogsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListStatusLogs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.ListStatusLogsReply ListStatusLogs(global::Greyhole.Myid.ListStatusLogsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListStatusLogs, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ListStatusLogsReply> ListStatusLogsAsync(global::Greyhole.Myid.ListStatusLogsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListStatusLogsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.ListStatusLogsReply> ListStatusLogsAsync(global::Greyhole.Myid.ListStatusLogsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListStatusLogs, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override TheCoffeeHouseClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new TheCoffeeHouseClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(TheCoffeeHouseBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateUser, serviceImpl.CreateUser)
          .AddMethod(__Method_ListUsers, serviceImpl.ListUsers)
          .AddMethod(__Method_ListUsersV2, serviceImpl.ListUsersV2)
          .AddMethod(__Method_UpdateUser, serviceImpl.UpdateUser)
          .AddMethod(__Method_LockUser, serviceImpl.LockUser)
          .AddMethod(__Method_LockUsers, serviceImpl.LockUsers)
          .AddMethod(__Method_UnlockUser, serviceImpl.UnlockUser)
          .AddMethod(__Method_BanUser, serviceImpl.BanUser)
          .AddMethod(__Method_BanUsers, serviceImpl.BanUsers)
          .AddMethod(__Method_UnbanUser, serviceImpl.UnbanUser)
          .AddMethod(__Method_GetUser, serviceImpl.GetUser)
          .AddMethod(__Method_ResendCreatePasswordOTP, serviceImpl.ResendCreatePasswordOTP)
          .AddMethod(__Method_GetUsers, serviceImpl.GetUsers)
          .AddMethod(__Method_ResendResetPasswordOTP, serviceImpl.ResendResetPasswordOTP)
          .AddMethod(__Method_ListStatusLogs, serviceImpl.ListStatusLogs).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, TheCoffeeHouseBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.CreateUserRequest, global::Greyhole.Myid.CreateUserReply>(serviceImpl.CreateUser));
      serviceBinder.AddMethod(__Method_ListUsers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.ListUsersRequest, global::Greyhole.Myid.ListUsersReply>(serviceImpl.ListUsers));
      serviceBinder.AddMethod(__Method_ListUsersV2, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.ListUsersV2Request, global::Greyhole.Myid.ListUsersV2Reply>(serviceImpl.ListUsersV2));
      serviceBinder.AddMethod(__Method_UpdateUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.UpdateUserRequest, global::Greyhole.Myid.UpdateUserReply>(serviceImpl.UpdateUser));
      serviceBinder.AddMethod(__Method_LockUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.LockUserRequest, global::Greyhole.Myid.LockUserReply>(serviceImpl.LockUser));
      serviceBinder.AddMethod(__Method_LockUsers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.LockUsersRequest, global::Greyhole.Myid.LockUsersReply>(serviceImpl.LockUsers));
      serviceBinder.AddMethod(__Method_UnlockUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.UnlockUserRequest, global::Greyhole.Myid.UnlockUserReply>(serviceImpl.UnlockUser));
      serviceBinder.AddMethod(__Method_BanUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.BanUserRequest, global::Greyhole.Myid.BanUserReply>(serviceImpl.BanUser));
      serviceBinder.AddMethod(__Method_BanUsers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.BanUsersRequest, global::Greyhole.Myid.BanUsersReply>(serviceImpl.BanUsers));
      serviceBinder.AddMethod(__Method_UnbanUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.UnbanUserRequest, global::Greyhole.Myid.UnbanUserReply>(serviceImpl.UnbanUser));
      serviceBinder.AddMethod(__Method_GetUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.GetUserRequest, global::Greyhole.Myid.GetUserReply>(serviceImpl.GetUser));
      serviceBinder.AddMethod(__Method_ResendCreatePasswordOTP, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.ResendCreatePasswordOTPRequest, global::Greyhole.Myid.ResendCreatePasswordOTPReply>(serviceImpl.ResendCreatePasswordOTP));
      serviceBinder.AddMethod(__Method_GetUsers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.GetUsersRequest, global::Greyhole.Myid.GetUsersReply>(serviceImpl.GetUsers));
      serviceBinder.AddMethod(__Method_ResendResetPasswordOTP, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.ResendResetPasswordOTPRequest, global::Greyhole.Myid.ResendResetPasswordOTPReply>(serviceImpl.ResendResetPasswordOTP));
      serviceBinder.AddMethod(__Method_ListStatusLogs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.ListStatusLogsRequest, global::Greyhole.Myid.ListStatusLogsReply>(serviceImpl.ListStatusLogs));
    }

  }
  public static partial class Waitress
  {
    static readonly string __ServiceName = "greyhole.myid.Waitress";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.GetUsersRequest> __Marshaller_greyhole_myid_GetUsersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.GetUsersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.GetUsersReply> __Marshaller_greyhole_myid_GetUsersReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.GetUsersReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.GetUsersByUsernameRequest> __Marshaller_greyhole_myid_GetUsersByUsernameRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.GetUsersByUsernameRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.GetUsersByUsernameReply> __Marshaller_greyhole_myid_GetUsersByUsernameReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.GetUsersByUsernameReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.GetUserByUsernameRequest> __Marshaller_greyhole_myid_GetUserByUsernameRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.GetUserByUsernameRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.GetUserByUsernameReply> __Marshaller_greyhole_myid_GetUserByUsernameReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.GetUserByUsernameReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.GetUserIDsRequest> __Marshaller_greyhole_myid_GetUserIDsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.GetUserIDsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.GetUserIDsReply> __Marshaller_greyhole_myid_GetUserIDsReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.GetUserIDsReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.GetSafeIDsRequest> __Marshaller_greyhole_myid_GetSafeIDsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.GetSafeIDsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.GetSafeIDsReply> __Marshaller_greyhole_myid_GetSafeIDsReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.GetSafeIDsReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.GetTenantIDsRequest> __Marshaller_greyhole_myid_GetTenantIDsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.GetTenantIDsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.GetTenantIDsReply> __Marshaller_greyhole_myid_GetTenantIDsReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.GetTenantIDsReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.SignInV2Request> __Marshaller_greyhole_myid_SignInV2Request = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.SignInV2Request.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.CheckCredentialsReply> __Marshaller_greyhole_myid_CheckCredentialsReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.CheckCredentialsReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.UpdateUserContactRequest> __Marshaller_greyhole_myid_UpdateUserContactRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.UpdateUserContactRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.UpdateUserContactReply> __Marshaller_greyhole_myid_UpdateUserContactReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.UpdateUserContactReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.UpdatePasswordRequest> __Marshaller_greyhole_myid_UpdatePasswordRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.UpdatePasswordRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.UpdatePasswordReply> __Marshaller_greyhole_myid_UpdatePasswordReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.UpdatePasswordReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.DeleteFacebookCredentialRequest> __Marshaller_greyhole_myid_DeleteFacebookCredentialRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.DeleteFacebookCredentialRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.DeleteGoogleCredentialRequest> __Marshaller_greyhole_myid_DeleteGoogleCredentialRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.DeleteGoogleCredentialRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.DeletePhoneCredentialRequest> __Marshaller_greyhole_myid_DeletePhoneCredentialRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.DeletePhoneCredentialRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.DeleteTwitterCredentialRequest> __Marshaller_greyhole_myid_DeleteTwitterCredentialRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.DeleteTwitterCredentialRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.DeleteTelegramCredentialRequest> __Marshaller_greyhole_myid_DeleteTelegramCredentialRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.DeleteTelegramCredentialRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Greyhole.Myid.DeleteCryptoWalletCredentialRequest> __Marshaller_greyhole_myid_DeleteCryptoWalletCredentialRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Greyhole.Myid.DeleteCryptoWalletCredentialRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.GetUsersRequest, global::Greyhole.Myid.GetUsersReply> __Method_GetUsers = new grpc::Method<global::Greyhole.Myid.GetUsersRequest, global::Greyhole.Myid.GetUsersReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUsers",
        __Marshaller_greyhole_myid_GetUsersRequest,
        __Marshaller_greyhole_myid_GetUsersReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.GetUsersByUsernameRequest, global::Greyhole.Myid.GetUsersByUsernameReply> __Method_GetUsersByUsername = new grpc::Method<global::Greyhole.Myid.GetUsersByUsernameRequest, global::Greyhole.Myid.GetUsersByUsernameReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUsersByUsername",
        __Marshaller_greyhole_myid_GetUsersByUsernameRequest,
        __Marshaller_greyhole_myid_GetUsersByUsernameReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.GetUserByUsernameRequest, global::Greyhole.Myid.GetUserByUsernameReply> __Method_GetUserByUsername = new grpc::Method<global::Greyhole.Myid.GetUserByUsernameRequest, global::Greyhole.Myid.GetUserByUsernameReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUserByUsername",
        __Marshaller_greyhole_myid_GetUserByUsernameRequest,
        __Marshaller_greyhole_myid_GetUserByUsernameReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.GetUserIDsRequest, global::Greyhole.Myid.GetUserIDsReply> __Method_GetUserIDs = new grpc::Method<global::Greyhole.Myid.GetUserIDsRequest, global::Greyhole.Myid.GetUserIDsReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUserIDs",
        __Marshaller_greyhole_myid_GetUserIDsRequest,
        __Marshaller_greyhole_myid_GetUserIDsReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.GetSafeIDsRequest, global::Greyhole.Myid.GetSafeIDsReply> __Method_GetSafeIDs = new grpc::Method<global::Greyhole.Myid.GetSafeIDsRequest, global::Greyhole.Myid.GetSafeIDsReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSafeIDs",
        __Marshaller_greyhole_myid_GetSafeIDsRequest,
        __Marshaller_greyhole_myid_GetSafeIDsReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.GetTenantIDsRequest, global::Greyhole.Myid.GetTenantIDsReply> __Method_GetTenantIDs = new grpc::Method<global::Greyhole.Myid.GetTenantIDsRequest, global::Greyhole.Myid.GetTenantIDsReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTenantIDs",
        __Marshaller_greyhole_myid_GetTenantIDsRequest,
        __Marshaller_greyhole_myid_GetTenantIDsReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.SignInV2Request, global::Greyhole.Myid.CheckCredentialsReply> __Method_CheckCredentials = new grpc::Method<global::Greyhole.Myid.SignInV2Request, global::Greyhole.Myid.CheckCredentialsReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CheckCredentials",
        __Marshaller_greyhole_myid_SignInV2Request,
        __Marshaller_greyhole_myid_CheckCredentialsReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.UpdateUserContactRequest, global::Greyhole.Myid.UpdateUserContactReply> __Method_UpdateUserContact = new grpc::Method<global::Greyhole.Myid.UpdateUserContactRequest, global::Greyhole.Myid.UpdateUserContactReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateUserContact",
        __Marshaller_greyhole_myid_UpdateUserContactRequest,
        __Marshaller_greyhole_myid_UpdateUserContactReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.UpdatePasswordRequest, global::Greyhole.Myid.UpdatePasswordReply> __Method_UpdatePassword = new grpc::Method<global::Greyhole.Myid.UpdatePasswordRequest, global::Greyhole.Myid.UpdatePasswordReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdatePassword",
        __Marshaller_greyhole_myid_UpdatePasswordRequest,
        __Marshaller_greyhole_myid_UpdatePasswordReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.DeleteFacebookCredentialRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteFacebookCredential = new grpc::Method<global::Greyhole.Myid.DeleteFacebookCredentialRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteFacebookCredential",
        __Marshaller_greyhole_myid_DeleteFacebookCredentialRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.DeleteGoogleCredentialRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteGoogleCredential = new grpc::Method<global::Greyhole.Myid.DeleteGoogleCredentialRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteGoogleCredential",
        __Marshaller_greyhole_myid_DeleteGoogleCredentialRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.DeletePhoneCredentialRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeletePhoneCredential = new grpc::Method<global::Greyhole.Myid.DeletePhoneCredentialRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeletePhoneCredential",
        __Marshaller_greyhole_myid_DeletePhoneCredentialRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.DeleteTwitterCredentialRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteTwitterCredential = new grpc::Method<global::Greyhole.Myid.DeleteTwitterCredentialRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteTwitterCredential",
        __Marshaller_greyhole_myid_DeleteTwitterCredentialRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.DeleteTelegramCredentialRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteTelegramCredential = new grpc::Method<global::Greyhole.Myid.DeleteTelegramCredentialRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteTelegramCredential",
        __Marshaller_greyhole_myid_DeleteTelegramCredentialRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Greyhole.Myid.DeleteCryptoWalletCredentialRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteCryptoWalletCredential = new grpc::Method<global::Greyhole.Myid.DeleteCryptoWalletCredentialRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteCryptoWalletCredential",
        __Marshaller_greyhole_myid_DeleteCryptoWalletCredentialRequest,
        __Marshaller_google_protobuf_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Greyhole.Myid.MyidReflection.Descriptor.Services[2]; }
    }

    /// <summary>Base class for server-side implementations of Waitress</summary>
    [grpc::BindServiceMethod(typeof(Waitress), "BindService")]
    public abstract partial class WaitressBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.GetUsersReply> GetUsers(global::Greyhole.Myid.GetUsersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// deprecated (because this does not support multi tenant)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.GetUsersByUsernameReply> GetUsersByUsername(global::Greyhole.Myid.GetUsersByUsernameRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.GetUserByUsernameReply> GetUserByUsername(global::Greyhole.Myid.GetUserByUsernameRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Support mapping safe_id to user_id for old services using safe_id
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.GetUserIDsReply> GetUserIDs(global::Greyhole.Myid.GetUserIDsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.GetSafeIDsReply> GetSafeIDs(global::Greyhole.Myid.GetSafeIDsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.GetTenantIDsReply> GetTenantIDs(global::Greyhole.Myid.GetTenantIDsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.CheckCredentialsReply> CheckCredentials(global::Greyhole.Myid.SignInV2Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.UpdateUserContactReply> UpdateUserContact(global::Greyhole.Myid.UpdateUserContactRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Greyhole.Myid.UpdatePasswordReply> UpdatePassword(global::Greyhole.Myid.UpdatePasswordRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// API for testing sign up credential
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteFacebookCredential(global::Greyhole.Myid.DeleteFacebookCredentialRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteGoogleCredential(global::Greyhole.Myid.DeleteGoogleCredentialRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeletePhoneCredential(global::Greyhole.Myid.DeletePhoneCredentialRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTwitterCredential(global::Greyhole.Myid.DeleteTwitterCredentialRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTelegramCredential(global::Greyhole.Myid.DeleteTelegramCredentialRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCryptoWalletCredential(global::Greyhole.Myid.DeleteCryptoWalletCredentialRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Waitress</summary>
    public partial class WaitressClient : grpc::ClientBase<WaitressClient>
    {
      /// <summary>Creates a new client for Waitress</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public WaitressClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Waitress that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public WaitressClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected WaitressClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected WaitressClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.GetUsersReply GetUsers(global::Greyhole.Myid.GetUsersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUsers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.GetUsersReply GetUsers(global::Greyhole.Myid.GetUsersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUsers, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.GetUsersReply> GetUsersAsync(global::Greyhole.Myid.GetUsersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUsersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.GetUsersReply> GetUsersAsync(global::Greyhole.Myid.GetUsersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUsers, null, options, request);
      }
      /// <summary>
      /// deprecated (because this does not support multi tenant)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.GetUsersByUsernameReply GetUsersByUsername(global::Greyhole.Myid.GetUsersByUsernameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUsersByUsername(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// deprecated (because this does not support multi tenant)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.GetUsersByUsernameReply GetUsersByUsername(global::Greyhole.Myid.GetUsersByUsernameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUsersByUsername, null, options, request);
      }
      /// <summary>
      /// deprecated (because this does not support multi tenant)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.GetUsersByUsernameReply> GetUsersByUsernameAsync(global::Greyhole.Myid.GetUsersByUsernameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUsersByUsernameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// deprecated (because this does not support multi tenant)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.GetUsersByUsernameReply> GetUsersByUsernameAsync(global::Greyhole.Myid.GetUsersByUsernameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUsersByUsername, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.GetUserByUsernameReply GetUserByUsername(global::Greyhole.Myid.GetUserByUsernameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserByUsername(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.GetUserByUsernameReply GetUserByUsername(global::Greyhole.Myid.GetUserByUsernameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUserByUsername, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.GetUserByUsernameReply> GetUserByUsernameAsync(global::Greyhole.Myid.GetUserByUsernameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserByUsernameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.GetUserByUsernameReply> GetUserByUsernameAsync(global::Greyhole.Myid.GetUserByUsernameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUserByUsername, null, options, request);
      }
      /// <summary>
      /// Support mapping safe_id to user_id for old services using safe_id
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.GetUserIDsReply GetUserIDs(global::Greyhole.Myid.GetUserIDsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserIDs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Support mapping safe_id to user_id for old services using safe_id
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.GetUserIDsReply GetUserIDs(global::Greyhole.Myid.GetUserIDsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUserIDs, null, options, request);
      }
      /// <summary>
      /// Support mapping safe_id to user_id for old services using safe_id
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.GetUserIDsReply> GetUserIDsAsync(global::Greyhole.Myid.GetUserIDsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserIDsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Support mapping safe_id to user_id for old services using safe_id
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.GetUserIDsReply> GetUserIDsAsync(global::Greyhole.Myid.GetUserIDsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUserIDs, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.GetSafeIDsReply GetSafeIDs(global::Greyhole.Myid.GetSafeIDsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSafeIDs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.GetSafeIDsReply GetSafeIDs(global::Greyhole.Myid.GetSafeIDsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSafeIDs, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.GetSafeIDsReply> GetSafeIDsAsync(global::Greyhole.Myid.GetSafeIDsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSafeIDsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.GetSafeIDsReply> GetSafeIDsAsync(global::Greyhole.Myid.GetSafeIDsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSafeIDs, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.GetTenantIDsReply GetTenantIDs(global::Greyhole.Myid.GetTenantIDsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTenantIDs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.GetTenantIDsReply GetTenantIDs(global::Greyhole.Myid.GetTenantIDsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTenantIDs, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.GetTenantIDsReply> GetTenantIDsAsync(global::Greyhole.Myid.GetTenantIDsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTenantIDsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.GetTenantIDsReply> GetTenantIDsAsync(global::Greyhole.Myid.GetTenantIDsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTenantIDs, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.CheckCredentialsReply CheckCredentials(global::Greyhole.Myid.SignInV2Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckCredentials(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.CheckCredentialsReply CheckCredentials(global::Greyhole.Myid.SignInV2Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CheckCredentials, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.CheckCredentialsReply> CheckCredentialsAsync(global::Greyhole.Myid.SignInV2Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckCredentialsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.CheckCredentialsReply> CheckCredentialsAsync(global::Greyhole.Myid.SignInV2Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CheckCredentials, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.UpdateUserContactReply UpdateUserContact(global::Greyhole.Myid.UpdateUserContactRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateUserContact(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.UpdateUserContactReply UpdateUserContact(global::Greyhole.Myid.UpdateUserContactRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateUserContact, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.UpdateUserContactReply> UpdateUserContactAsync(global::Greyhole.Myid.UpdateUserContactRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateUserContactAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.UpdateUserContactReply> UpdateUserContactAsync(global::Greyhole.Myid.UpdateUserContactRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateUserContact, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.UpdatePasswordReply UpdatePassword(global::Greyhole.Myid.UpdatePasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdatePassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Greyhole.Myid.UpdatePasswordReply UpdatePassword(global::Greyhole.Myid.UpdatePasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdatePassword, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.UpdatePasswordReply> UpdatePasswordAsync(global::Greyhole.Myid.UpdatePasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdatePasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Greyhole.Myid.UpdatePasswordReply> UpdatePasswordAsync(global::Greyhole.Myid.UpdatePasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdatePassword, null, options, request);
      }
      /// <summary>
      /// API for testing sign up credential
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteFacebookCredential(global::Greyhole.Myid.DeleteFacebookCredentialRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteFacebookCredential(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API for testing sign up credential
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteFacebookCredential(global::Greyhole.Myid.DeleteFacebookCredentialRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteFacebookCredential, null, options, request);
      }
      /// <summary>
      /// API for testing sign up credential
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteFacebookCredentialAsync(global::Greyhole.Myid.DeleteFacebookCredentialRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteFacebookCredentialAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API for testing sign up credential
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteFacebookCredentialAsync(global::Greyhole.Myid.DeleteFacebookCredentialRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteFacebookCredential, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteGoogleCredential(global::Greyhole.Myid.DeleteGoogleCredentialRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteGoogleCredential(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteGoogleCredential(global::Greyhole.Myid.DeleteGoogleCredentialRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteGoogleCredential, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteGoogleCredentialAsync(global::Greyhole.Myid.DeleteGoogleCredentialRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteGoogleCredentialAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteGoogleCredentialAsync(global::Greyhole.Myid.DeleteGoogleCredentialRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteGoogleCredential, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeletePhoneCredential(global::Greyhole.Myid.DeletePhoneCredentialRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeletePhoneCredential(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeletePhoneCredential(global::Greyhole.Myid.DeletePhoneCredentialRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeletePhoneCredential, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeletePhoneCredentialAsync(global::Greyhole.Myid.DeletePhoneCredentialRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeletePhoneCredentialAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeletePhoneCredentialAsync(global::Greyhole.Myid.DeletePhoneCredentialRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeletePhoneCredential, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteTwitterCredential(global::Greyhole.Myid.DeleteTwitterCredentialRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTwitterCredential(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteTwitterCredential(global::Greyhole.Myid.DeleteTwitterCredentialRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteTwitterCredential, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTwitterCredentialAsync(global::Greyhole.Myid.DeleteTwitterCredentialRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTwitterCredentialAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTwitterCredentialAsync(global::Greyhole.Myid.DeleteTwitterCredentialRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteTwitterCredential, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteTelegramCredential(global::Greyhole.Myid.DeleteTelegramCredentialRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTelegramCredential(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteTelegramCredential(global::Greyhole.Myid.DeleteTelegramCredentialRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteTelegramCredential, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTelegramCredentialAsync(global::Greyhole.Myid.DeleteTelegramCredentialRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTelegramCredentialAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTelegramCredentialAsync(global::Greyhole.Myid.DeleteTelegramCredentialRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteTelegramCredential, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteCryptoWalletCredential(global::Greyhole.Myid.DeleteCryptoWalletCredentialRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCryptoWalletCredential(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteCryptoWalletCredential(global::Greyhole.Myid.DeleteCryptoWalletCredentialRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteCryptoWalletCredential, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCryptoWalletCredentialAsync(global::Greyhole.Myid.DeleteCryptoWalletCredentialRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCryptoWalletCredentialAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCryptoWalletCredentialAsync(global::Greyhole.Myid.DeleteCryptoWalletCredentialRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteCryptoWalletCredential, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override WaitressClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new WaitressClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(WaitressBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetUsers, serviceImpl.GetUsers)
          .AddMethod(__Method_GetUsersByUsername, serviceImpl.GetUsersByUsername)
          .AddMethod(__Method_GetUserByUsername, serviceImpl.GetUserByUsername)
          .AddMethod(__Method_GetUserIDs, serviceImpl.GetUserIDs)
          .AddMethod(__Method_GetSafeIDs, serviceImpl.GetSafeIDs)
          .AddMethod(__Method_GetTenantIDs, serviceImpl.GetTenantIDs)
          .AddMethod(__Method_CheckCredentials, serviceImpl.CheckCredentials)
          .AddMethod(__Method_UpdateUserContact, serviceImpl.UpdateUserContact)
          .AddMethod(__Method_UpdatePassword, serviceImpl.UpdatePassword)
          .AddMethod(__Method_DeleteFacebookCredential, serviceImpl.DeleteFacebookCredential)
          .AddMethod(__Method_DeleteGoogleCredential, serviceImpl.DeleteGoogleCredential)
          .AddMethod(__Method_DeletePhoneCredential, serviceImpl.DeletePhoneCredential)
          .AddMethod(__Method_DeleteTwitterCredential, serviceImpl.DeleteTwitterCredential)
          .AddMethod(__Method_DeleteTelegramCredential, serviceImpl.DeleteTelegramCredential)
          .AddMethod(__Method_DeleteCryptoWalletCredential, serviceImpl.DeleteCryptoWalletCredential).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, WaitressBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetUsers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.GetUsersRequest, global::Greyhole.Myid.GetUsersReply>(serviceImpl.GetUsers));
      serviceBinder.AddMethod(__Method_GetUsersByUsername, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.GetUsersByUsernameRequest, global::Greyhole.Myid.GetUsersByUsernameReply>(serviceImpl.GetUsersByUsername));
      serviceBinder.AddMethod(__Method_GetUserByUsername, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.GetUserByUsernameRequest, global::Greyhole.Myid.GetUserByUsernameReply>(serviceImpl.GetUserByUsername));
      serviceBinder.AddMethod(__Method_GetUserIDs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.GetUserIDsRequest, global::Greyhole.Myid.GetUserIDsReply>(serviceImpl.GetUserIDs));
      serviceBinder.AddMethod(__Method_GetSafeIDs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.GetSafeIDsRequest, global::Greyhole.Myid.GetSafeIDsReply>(serviceImpl.GetSafeIDs));
      serviceBinder.AddMethod(__Method_GetTenantIDs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.GetTenantIDsRequest, global::Greyhole.Myid.GetTenantIDsReply>(serviceImpl.GetTenantIDs));
      serviceBinder.AddMethod(__Method_CheckCredentials, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.SignInV2Request, global::Greyhole.Myid.CheckCredentialsReply>(serviceImpl.CheckCredentials));
      serviceBinder.AddMethod(__Method_UpdateUserContact, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.UpdateUserContactRequest, global::Greyhole.Myid.UpdateUserContactReply>(serviceImpl.UpdateUserContact));
      serviceBinder.AddMethod(__Method_UpdatePassword, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.UpdatePasswordRequest, global::Greyhole.Myid.UpdatePasswordReply>(serviceImpl.UpdatePassword));
      serviceBinder.AddMethod(__Method_DeleteFacebookCredential, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.DeleteFacebookCredentialRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteFacebookCredential));
      serviceBinder.AddMethod(__Method_DeleteGoogleCredential, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.DeleteGoogleCredentialRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteGoogleCredential));
      serviceBinder.AddMethod(__Method_DeletePhoneCredential, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.DeletePhoneCredentialRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeletePhoneCredential));
      serviceBinder.AddMethod(__Method_DeleteTwitterCredential, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.DeleteTwitterCredentialRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteTwitterCredential));
      serviceBinder.AddMethod(__Method_DeleteTelegramCredential, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.DeleteTelegramCredentialRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteTelegramCredential));
      serviceBinder.AddMethod(__Method_DeleteCryptoWalletCredential, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Greyhole.Myid.DeleteCryptoWalletCredentialRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteCryptoWalletCredential));
    }

  }
  public static partial class Latte
  {
    static readonly string __ServiceName = "greyhole.myid.Latte";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ResetToken = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetToken",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Greyhole.Myid.MyidReflection.Descriptor.Services[3]; }
    }

    /// <summary>Base class for server-side implementations of Latte</summary>
    [grpc::BindServiceMethod(typeof(Latte), "BindService")]
    public abstract partial class LatteBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> ResetToken(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Latte</summary>
    public partial class LatteClient : grpc::ClientBase<LatteClient>
    {
      /// <summary>Creates a new client for Latte</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public LatteClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Latte that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public LatteClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected LatteClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected LatteClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ResetToken(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetToken(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ResetToken(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetToken, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ResetTokenAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetTokenAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ResetTokenAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetToken, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override LatteClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new LatteClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(LatteBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ResetToken, serviceImpl.ResetToken).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, LatteBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ResetToken, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.ResetToken));
    }

  }
}
#endregion
